{"version":3,"file":"static/js/478.f9077860.chunk.js","mappings":"uLAIA,MA0EA,GAAeA,EAAAA,EAAAA,KAJUC,IAAK,CAC5BC,OAAQD,EAAME,OAAOD,UAGiB,CAAEE,WAAW,KAArD,EA1EcC,IAA6B,IAA5B,OAAEH,EAAM,WAAEE,GAAYC,EACnC,MAAOC,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,KAC9CC,EAAgBC,IAAqBF,EAAAA,EAAAA,UAAS,QAErDG,EAAAA,EAAAA,YAAU,KACRP,GAAY,GACX,CAACA,KAEJO,EAAAA,EAAAA,YAAU,KAENJ,EADqB,QAAnBE,EACgBP,EAEAA,EAAOU,QAAQC,GAAUA,EAAMC,KAAKC,WAAWN,KACnE,GACC,CAACP,EAAQO,IAEZ,MAAMO,EAAU,kBAAkBC,MAAM,IAExC,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAC7BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0CAAyCC,SAAA,EACtDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qCAAoCC,UACjDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wCAAuCC,SAAC,cAExDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mGAAkGC,SAAA,EAC/GF,EAAAA,EAAAA,KAAA,UACEI,QAASA,IAAMZ,EAAkB,OACjCS,UAAW,2CACU,QAAnBV,EAA2B,yBAA2B,6BACrDW,SACJ,UAGAJ,EAAQO,KAAKC,IACZN,EAAAA,EAAAA,KAAA,UAEEI,QAASA,IAAMZ,EAAkBc,GACjCL,UAAW,2CACTV,IAAmBe,EAAS,yBAA2B,kCACtDJ,SAEFI,GANIA,SAYXN,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sEAAqEC,SACjFd,GACCA,EAAeiB,KAAKV,IAClBQ,EAAAA,EAAAA,MAAA,OAEEF,UAAU,yEAAwEC,SAAA,EAElFF,EAAAA,EAAAA,KAAA,OACEO,IAAKZ,EAAMa,KACXC,IAAKd,EAAMC,KACXK,UAAU,4FAEZD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6IAA4IC,UACzJF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mCAAkCC,SAAEP,EAAMC,WATvDD,EAAMe,YAejB,IC5DV,QARA,WACE,OACEV,EAAAA,EAAAA,KAACW,EAAAA,EAAM,CAAAT,UACHF,EAAAA,EAAAA,KAACY,EAAY,KAGrB,C,sICUA,MAuBA,GAAe9B,EAAAA,EAAAA,IAAQ,KAAM,CACzB+B,oBAAmB,KACnBC,UAAS,KACTC,QAAO,KACPC,UAAS,KACTC,UAAS,KACTC,eAAc,KACdC,iBACJ,KARA,EAvBgBC,KAEZ3B,EAAAA,EAAAA,YAAU,KACN2B,EAAML,UACNK,EAAMP,sBACNO,EAAMN,YACNM,EAAMJ,YACNI,EAAMH,YACNG,EAAMF,iBACNE,EAAMD,kBAAkB,GACzB,KAGChB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIF,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,KACPrB,EAAAA,EAAAA,KAACsB,EAAAA,GAAc,CAACC,UAAW,MAC1BH,EAAMlB,UACPF,EAAAA,EAAAA,KAACwB,EAAAA,EAAM,S,0DC7BZ,MAAMtC,EAAaA,IAAMuC,UAC5B,MAAMC,EAAS,CACXC,QAAS,CACL,OAAU,qBAIlB,IACI,MAAMC,QAAYC,EAAAA,EAAMC,IAAI,yCAAqDJ,GAE7EE,EAAIG,QAAU,KAAOH,EAAIG,OAAS,IAClCC,EAAS,CACLC,KAAMC,EAAAA,GACNC,QAASP,EAAIQ,QAGjBC,QAAQC,MAAM,oCAAqCV,EAAIG,QACvDC,EAAS,CACLC,KAAMM,EAAAA,KAGlB,CAAE,MAAOC,GACLH,QAAQC,MAAM,yBAA0BE,EAAIC,SAC5CT,EAAS,CACLC,KAAMM,EAAAA,IAEd,E,wGCJG,MAAMG,EAAWC,GAAWlB,UAC/B,GAAImB,aAAaC,QAAQ,UAAW,CAChC,MAAMnB,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,cAAiB,OAAOiB,aAAaC,QAAQ,cAI/CC,EAAaH,EAAQjC,GACrBqC,EAAOC,KAAKC,UAAU,CAAEH,eAE9B,IACI,MAAMlB,QAAYC,EAAAA,EAAMqB,KAAK,0CAAsDH,EAAMrB,GAEtE,MAAfE,EAAIG,OACJC,EAAS,CACLC,KAAMkB,EAAAA,GACNhB,QAASP,EAAIQ,OAGjBJ,EAAS,CACLC,KAAMmB,EAAAA,IAGlB,CAAE,MAAMZ,GACJR,EAAS,CACLC,KAAMmB,EAAAA,IAEd,CAEJ,KAAO,CACH,IAAIC,EAAO,GAEPT,aAAaC,QAAQ,UACrBQ,EAAOL,KAAKM,MAAMV,aAAaC,QAAQ,UAG3C,IAAIU,GAAgB,EAEpBF,EAAKhD,KAAImD,IACDb,EAAQjC,GAAG+C,aAAeD,EAAKb,QAAQjC,GAAG+C,aAC1CF,GAAgB,EACpB,IAGJ,MAAMG,EAAa,CACff,QAASA,EACTgB,MAAO,GAGPJ,GACAF,EAAKO,KAAKF,GAGd1B,EAAS,CACLC,KAAM4B,EAAAA,GACN1B,QAASkB,GAEjB,GAISrC,EAAYA,IAAMS,UAC3B,GAAImB,aAAaC,QAAQ,UAAW,CAChC,MAAMnB,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,cAAiB,OAAOiB,aAAaC,QAAQ,cAIrD,IACI,MAAMjB,QAAYC,EAAAA,EAAMC,IAAI,4CAAwDJ,GAEjE,MAAfE,EAAIG,OACJC,EAAS,CACLC,KAAM6B,EAAAA,GACN3B,QAASP,EAAIQ,OAGjBJ,EAAS,CACLC,KAAM8B,EAAAA,IAGlB,CAAE,MAAMvB,GACJR,EAAS,CACLC,KAAM8B,EAAAA,IAEd,CACJ,MACI/B,EAAS,CACLC,KAAM+B,EAAAA,GAEd,EAGS/C,EAAYA,IAAMQ,UAC3B,GAAImB,aAAaC,QAAQ,UAAW,CAChC,MAAMnB,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,cAAiB,OAAOiB,aAAaC,QAAQ,cAIrD,IACI,MAAMjB,QAAYC,EAAAA,EAAMC,IAAI,2CAAuDJ,GAEhE,MAAfE,EAAIG,OACJC,EAAS,CACLC,KAAMgC,EAAAA,GACN9B,QAASP,EAAIQ,OAGjBJ,EAAS,CACLC,KAAMiC,EAAAA,IAGlB,CAAE,MAAM1B,GACJR,EAAS,CACLC,KAAMiC,EAAAA,IAEd,CACJ,KAAO,CACH,IAAIC,EAAQ,EACRC,EAAgB,EAChBf,EAAO,GAEPT,aAAaC,QAAQ,UACrBQ,EAAOL,KAAKM,MAAMV,aAAaC,QAAQ,SAEvCQ,EAAKhD,KAAImD,IACLW,GAASE,WAAWb,EAAKb,QAAQ2B,OAASD,WAAWb,EAAKG,OAC1DS,GAAiBC,WAAWb,EAAKb,QAAQ4B,eAAiBF,WAAWb,EAAKG,MAAM,KAIxF3B,EAAS,CACLC,KAAMuC,EAAAA,GACNrC,QAAS,CAACkC,WAAWF,EAAMM,QAAQ,IAAKJ,WAAWD,EAAcK,QAAQ,MAEjF,GAISvD,EAAiBA,IAAMO,UAChC,GAAImB,aAAaC,QAAQ,UAAW,CAChC,MAAMnB,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,cAAiB,OAAOiB,aAAaC,QAAQ,cAIrD,IACI,MAAMjB,QAAYC,EAAAA,EAAMC,IAAI,gDAA4DJ,GAErE,MAAfE,EAAIG,OACJC,EAAS,CACLC,KAAMyC,EAAAA,GACNvC,QAASP,EAAIQ,OAGjBJ,EAAS,CACLC,KAAM0C,EAAAA,IAGlB,CAAE,MAAMnC,GACJR,EAAS,CACLC,KAAM0C,EAAAA,IAEd,CACJ,KAAO,CACH,IAAIR,EAAQ,EAERvB,aAAaC,QAAQ,UACrBsB,EAAQnB,KAAKM,MAAMV,aAAaC,QAAQ,SAAS+B,QAGrD5C,EAAS,CACLC,KAAM4C,EAAAA,GACN1C,QAASgC,GAEjB,GAGSW,EAAcA,CAACtB,EAAMG,IAAUlC,UACxC,GAAImB,aAAaC,QAAQ,UAAW,CAChC,MAAMnB,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,cAAiB,OAAOiB,aAAaC,QAAQ,cAI/CC,EAAaU,EAAKb,QAAQjC,GAC1BqC,EAAOC,KAAKC,UAAU,CAAEH,aAAYa,UAE1C,IACI,MAAM/B,QAAYC,EAAAA,EAAMkD,IAAI,6CAAyDhC,EAAMrB,GAExE,MAAfE,EAAIG,QAAmBH,EAAIQ,KAAKE,MAMhCN,EAAS,CACLC,KAAM+C,EAAAA,KANVhD,EAAS,CACLC,KAAMgD,EAAAA,GACN9C,QAASP,EAAIQ,MAOzB,CAAE,MAAMI,GACJR,EAAS,CACLC,KAAM+C,EAAAA,IAEd,CAEJ,KAAO,CACH,IAAI3B,EAAO,GAEPT,aAAaC,QAAQ,UACrBQ,EAAOL,KAAKM,MAAMV,aAAaC,QAAQ,SAEvCQ,EAAKhD,KAAI,CAAC6E,EAAWC,KACbD,EAAUvC,QAAQjC,GAAG+C,aAAeD,EAAKb,QAAQjC,GAAG+C,aACpDJ,EAAK8B,GAAOxB,MAAQyB,SAASzB,GACjC,KAIR3B,EAAS,CACLC,KAAMoD,EAAAA,GACNlD,QAASkB,GAEjB,GAISiC,EAAc9B,GAAQ/B,UAC/B,GAAImB,aAAaC,QAAQ,UAAW,CAChC,MAAMC,EAAaU,EAAKb,QAAQjC,GAC1BqC,EAAOC,KAAKC,UAAU,CAAEH,eAGxBpB,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,cAAiB,OAAOiB,aAAaC,QAAQ,aAEjDT,KAAMW,GAGV,IACI,MAAMnB,QAAYC,EAAAA,EAAM0D,OAAO,6CAAyD7D,GAErE,MAAfE,EAAIG,OACJC,EAAS,CACLC,KAAMuD,EAAAA,GACNrD,QAASP,EAAIQ,OAGjBJ,EAAS,CACLC,KAAMwD,EAAAA,IAGlB,CAAE,MAAMjD,GACJR,EAAS,CACLC,KAAMwD,EAAAA,IAEd,CACJ,KAAO,CACH,IAAIpC,EAAO,GACPqC,EAAW,GAEX9C,aAAaC,QAAQ,UACrBQ,EAAOL,KAAKM,MAAMV,aAAaC,QAAQ,SAEvCQ,EAAKhD,KAAI6E,IACDA,EAAUvC,QAAQjC,GAAG+C,aAAeD,EAAKb,QAAQjC,GAAG+C,YACpDiC,EAAS9B,KAAKsB,EAClB,KAIRlD,EAAS,CACLC,KAAM0D,EAAAA,GACNxD,QAASuD,GAEjB,E,4ECvTG,MAAMvE,EAAmBA,IAAMM,UAClC,GAAImB,aAAaC,QAAQ,UAAW,CAChC,MAAMnB,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,cAAiB,OAAOiB,aAAaC,QAAQ,cAIrD,IACI,MAAMjB,QAAYC,EAAAA,EAAMC,IAAI,yCAAqDJ,GAE9D,MAAfE,EAAIG,OACJC,EAAS,CACLC,KAAM2D,EAAAA,GACNzD,QAASP,EAAIQ,OAGjBJ,EAAS,CACLC,KAAM4D,EAAAA,IAGlB,CAAE,MAAMrD,GACJR,EAAS,CACLC,KAAM4D,EAAAA,IAEd,CACJ,GAISC,EAAsBA,CAC/BC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,IACC5E,UACD,GAAImB,aAAaC,QAAQ,UAAW,CAChC,MAAMnB,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChB,cAAiB,OAAOiB,aAAaC,QAAQ,cAI/CE,EAAOC,KAAKC,UAAU,CACxB8C,iBACAC,iBACAC,OACAC,wBACAC,UACAC,QACAC,mBAGJ,IACI,MAAMzE,QAAYC,EAAAA,EAAMkD,IAAI,2CAAuDhC,EAAMrB,GAEtE,MAAfE,EAAIG,QACJC,EAAS,CACLC,KAAMqE,EAAAA,GACNnE,QAASP,EAAIQ,OAEjBJ,GAASuE,EAAAA,EAAAA,GAAS,+BAAgC,YAElDvE,EAAS,CACLC,KAAMuE,EAAAA,KAEVxE,GAASuE,EAAAA,EAAAA,GAAS,2BAA4B,QAEtD,CAAE,MAAM/D,GACJR,EAAS,CACLC,KAAMuE,EAAAA,KAEVxE,GAASuE,EAAAA,EAAAA,GAAS,2BAA4B,OAClD,CACJ,E","sources":["containers/pages/products/ProductBrand.jsx","containers/Brands.jsx","hocs/Layout.js","redux/actions/brands.js","redux/actions/cart.js","redux/actions/profile.js"],"sourcesContent":["import { connect } from \"react-redux\";\r\nimport { get_brands } from \"../../../redux/actions/brands\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Brand = ({ brands, get_brands }) => {\r\n  const [filteredBrands, setFilteredBrands] = useState([]);\r\n  const [selectedLetter, setSelectedLetter] = useState(\"ALL\");\r\n\r\n  useEffect(() => {\r\n    get_brands();\r\n  }, [get_brands]);\r\n\r\n  useEffect(() => {\r\n    if (selectedLetter === \"ALL\") {\r\n      setFilteredBrands(brands);\r\n    } else {\r\n      setFilteredBrands(brands.filter((brand) => brand.name.startsWith(selectedLetter)));\r\n    }\r\n  }, [brands, selectedLetter]);\r\n\r\n  const letters = \"ACDEFGHILMNOSTV\".split(\"\");\r\n\r\n  return (\r\n    <div className=\"bg-white py-10\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-32\">\r\n        <div className=\"text-center max-w-2xl mx-auto mb-4\">\r\n          <h1 className=\"text-5xl font-extrabold text-gray-900\">Marcas</h1>\r\n        </div>\r\n        <div className=\"flex flex-wrap justify-center space-x-2 gap-x-1 overflow-x-auto scrollbar-hidden px-2 pb-4 mb-16\">\r\n          <button\r\n            onClick={() => setSelectedLetter(\"ALL\")}\r\n            className={`px-3 py-1 rounded-md whitespace-nowrap ${\r\n              selectedLetter === \"ALL\" ? \"bg-gray-800 text-white\" : \"bg-gray-200 text-gray-800\"\r\n            }`}\r\n          >\r\n            Todas\r\n          </button>\r\n          {letters.map((letter) => (\r\n            <button\r\n              key={letter}\r\n              onClick={() => setSelectedLetter(letter)}\r\n              className={`px-3 py-1 rounded-md whitespace-nowrap ${\r\n                selectedLetter === letter ? \"bg-gray-800 text-white\" : \"bg-gray-200 text-gray-800 mt-5\"\r\n              }`}\r\n            >\r\n              {letter}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Marcas */}\r\n        <div className=\"grid grid-cols-3 sm:grid-cols-4 md:grid-cols-5 lg:grid-cols-7 gap-4\">\r\n          {filteredBrands &&\r\n            filteredBrands.map((brand) => (\r\n              <div\r\n                key={brand.id}\r\n                className=\"relative group w-full bg-gray-100 rounded-lg overflow-hidden shadow-lg\"\r\n              >\r\n                <img\r\n                  src={brand.logo}\r\n                  alt={brand.name}\r\n                  className=\"w-full h-16 object-contain p-4 transition-transform duration-300 group-hover:scale-110\"\r\n                />\r\n                <div className=\"absolute inset-0 bg-black bg-opacity-50 opacity-0 group-hover:opacity-100 flex items-center justify-center transition-opacity duration-300\">\r\n                  <span className=\"text-white text-sm font-semibold\">{brand.name}</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  brands: state.Brands.brands,\r\n});\r\n\r\nexport default connect(mapStateToProps, { get_brands })(Brand);\r\n","import Layout from \"../hocs/Layout\"\r\nimport ProductBrand from \"./pages/products/ProductBrand\"\r\nfunction Brands() {\r\n  return (\r\n    <Layout>\r\n        <ProductBrand/>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Brands","import { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { check_authenticated, load_user, refresh } from '../redux/actions/auth';\r\nimport {\r\n    get_items,\r\n    get_total,\r\n    get_item_total\r\n} from \"../redux/actions/cart\";\r\n\r\nimport {\r\n    get_user_profile\r\n} from \"../redux/actions/profile\";\r\n\r\nimport { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navbar from '../components/navigation/Navbar';\r\nimport Footer from '../components/navigation/Footer';\r\n\r\nconst Layout = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.refresh()\r\n        props.check_authenticated()\r\n        props.load_user()\r\n        props.get_items()\r\n        props.get_total()\r\n        props.get_item_total()\r\n        props.get_user_profile()\r\n    }, []);\r\n\r\n    return(\r\n        <div>\r\n            <Navbar/>\r\n            <ToastContainer autoClose={5000} />\r\n            {props.children}\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(null, {\r\n    check_authenticated,\r\n    load_user,\r\n    refresh,\r\n    get_items,\r\n    get_total,\r\n    get_item_total,\r\n    get_user_profile\r\n}) (Layout)","import axios from 'axios';\r\nimport {\r\n    GET_BRANDS_SUCCESS,\r\n    GET_BRANDS_FAIL,\r\n} from './types';\r\n\r\nexport const get_brands = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/brand/brands`, config);\r\n        \r\n        if (res.status >= 200 && res.status < 300) {\r\n            dispatch({\r\n                type: GET_BRANDS_SUCCESS,\r\n                payload: res.data // Asegúrate de que tu API devuelva un objeto con `brands`\r\n            });\r\n        } else {\r\n            console.error('Error: Unexpected response status', res.status);\r\n            dispatch({\r\n                type: GET_BRANDS_FAIL\r\n            });\r\n        }\r\n    } catch (err) {\r\n        console.error('Error fetching brands:', err.message);\r\n        dispatch({\r\n            type: GET_BRANDS_FAIL\r\n        });\r\n    }\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    ADD_ITEM,\r\n    GET_TOTAL,\r\n    GET_ITEM_TOTAL,\r\n    GET_ITEMS,\r\n    UPDATE_ITEM,\r\n    REMOVE_ITEM,\r\n    EMPTY_CART,\r\n    ADD_ITEM_SUCCESS,\r\n    ADD_ITEM_FAIL,\r\n    GET_TOTAL_SUCCESS,\r\n    GET_TOTAL_FAIL,\r\n    GET_ITEM_TOTAL_SUCCESS,\r\n    GET_ITEM_TOTAL_FAIL,\r\n    GET_ITEMS_SUCCESS,\r\n    GET_ITEMS_FAIL,\r\n    UPDATE_ITEM_SUCCESS,\r\n    UPDATE_ITEM_FAIL,\r\n    REMOVE_ITEM_SUCCESS,\r\n    REMOVE_ITEM_FAIL,\r\n    EMPTY_CART_SUCCESS,\r\n    EMPTY_CART_FAIL,\r\n    SYNCH_CART_SUCCESS,\r\n    SYNCH_CART_FAIL,\r\n} from './types';\r\n\r\n\r\nexport const add_item = product => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        const product_id = product.id;\r\n        const body = JSON.stringify({ product_id });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/cart/add-item`, body, config);\r\n\r\n            if (res.status === 201) {\r\n                dispatch({\r\n                    type: ADD_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: ADD_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err){\r\n            dispatch({\r\n                type: ADD_ITEM_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        let shouldAddItem = true;\r\n\r\n        cart.map(item => {\r\n            if (product.id.toString() === item.product.id.toString()) {\r\n                shouldAddItem = false;\r\n            }\r\n        });\r\n\r\n        const order_item = {\r\n            product: product,\r\n            count: 1\r\n        };\r\n\r\n        if (shouldAddItem) {\r\n            cart.push(order_item);\r\n        }\r\n\r\n        dispatch({\r\n            type: ADD_ITEM,\r\n            payload: cart\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const get_items = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/cart-items`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_ITEMS_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ITEMS_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_ITEMS_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: GET_ITEMS\r\n        });\r\n    }\r\n}\r\n\r\nexport const get_total = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-total`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_TOTAL_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_TOTAL_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_TOTAL_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let total = 0.0;\r\n        let compare_total = 0.0;\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map(item => {\r\n                total += parseFloat(item.product.price) * parseFloat(item.count);\r\n                compare_total += parseFloat(item.product.compare_price) * parseFloat(item.count);\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: GET_TOTAL,\r\n            payload: [parseFloat(total.toFixed(2)), parseFloat(compare_total.toFixed(2))]\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const get_item_total = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-item-total`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_ITEM_TOTAL_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ITEM_TOTAL_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_ITEM_TOTAL_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let total = 0;\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            total = JSON.parse(localStorage.getItem('cart')).length;\r\n        }\r\n\r\n        dispatch({\r\n            type: GET_ITEM_TOTAL,\r\n            payload: total\r\n        });\r\n    }\r\n}\r\n\r\nexport const update_item = (item, count) => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        const product_id = item.product.id;\r\n        const body = JSON.stringify({ product_id, count });\r\n\r\n        try {\r\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/cart/update-item`, body, config);\r\n\r\n            if (res.status === 200 && !res.data.error) {\r\n                dispatch({\r\n                    type: UPDATE_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: UPDATE_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: UPDATE_ITEM_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map((cart_item, index) => {\r\n                if (cart_item.product.id.toString() === item.product.id.toString()) {\r\n                    cart[index].count = parseInt(count);\r\n                }\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: UPDATE_ITEM,\r\n            payload: cart\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const remove_item = item => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const product_id = item.product.id;\r\n        const body = JSON.stringify({ product_id });\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            },\r\n            data: body\r\n        };\r\n\r\n        try {\r\n            const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/cart/remove-item`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: REMOVE_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: REMOVE_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: REMOVE_ITEM_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let cart = [];\r\n        let new_cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map(cart_item => {\r\n                if (cart_item.product.id.toString() !== item.product.id.toString()) {\r\n                    new_cart.push(cart_item);\r\n                }\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: REMOVE_ITEM,\r\n            payload: new_cart\r\n        });\r\n    }\r\n}\r\n\r\nexport const empty_cart = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/cart/empty-cart`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: EMPTY_CART_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: EMPTY_CART_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: EMPTY_CART_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: EMPTY_CART\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const synch_cart = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n        }\r\n    };\r\n\r\n    let cart_items = [];\r\n\r\n    if (localStorage.getItem('cart')) {\r\n        let cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n        cart.map(cart_item => {\r\n            const item = {};\r\n            item.product_id = cart_item.product.id;\r\n            item.count = cart_item.count;\r\n            cart_items.push(item);\r\n        });\r\n    }\r\n\r\n    const body = JSON.stringify({ cart_items });\r\n\r\n    try {\r\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/cart/synch`, body, config);\r\n\r\n        if (res.status === 201) {\r\n            dispatch({\r\n                type: SYNCH_CART_SUCCESS\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: SYNCH_CART_FAIL\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: SYNCH_CART_FAIL\r\n        });\r\n    }\r\n}","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    GET_USER_PROFILE_SUCCESS,\r\n    GET_USER_PROFILE_FAIL,\r\n    UPDATE_USER_PROFILE_SUCCESS,\r\n    UPDATE_USER_PROFILE_FAIL\r\n} from './types';\r\n\r\nexport const get_user_profile = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/profile/user`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_USER_PROFILE_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_USER_PROFILE_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_USER_PROFILE_FAIL\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const update_user_profile = (\r\n    address_line_1,\r\n    address_line_2,\r\n    city,\r\n    state_province_region,\r\n    zipcode,\r\n    phone,\r\n    country_region\r\n) => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({\r\n            address_line_1,\r\n            address_line_2,\r\n            city,\r\n            state_province_region,\r\n            zipcode,\r\n            phone,\r\n            country_region\r\n        });\r\n\r\n        try {\r\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/profile/update`, body, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: UPDATE_USER_PROFILE_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n                dispatch(setAlert('Profile updated successfully', 'green'));\r\n            } else {\r\n                dispatch({\r\n                    type: UPDATE_USER_PROFILE_FAIL\r\n                });\r\n                dispatch(setAlert('Failed to update profile', 'red'));\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: UPDATE_USER_PROFILE_FAIL\r\n            });\r\n            dispatch(setAlert('Failed to update profile', 'red'));\r\n        }\r\n    }\r\n}"],"names":["connect","state","brands","Brands","get_brands","_ref","filteredBrands","setFilteredBrands","useState","selectedLetter","setSelectedLetter","useEffect","filter","brand","name","startsWith","letters","split","_jsx","className","children","_jsxs","onClick","map","letter","src","logo","alt","id","Layout","ProductBrand","check_authenticated","load_user","refresh","get_items","get_total","get_item_total","get_user_profile","props","Navbar","ToastContainer","autoClose","Footer","async","config","headers","res","axios","get","status","dispatch","type","GET_BRANDS_SUCCESS","payload","data","console","error","GET_BRANDS_FAIL","err","message","add_item","product","localStorage","getItem","product_id","body","JSON","stringify","post","ADD_ITEM_SUCCESS","ADD_ITEM_FAIL","cart","parse","shouldAddItem","item","toString","order_item","count","push","ADD_ITEM","GET_ITEMS_SUCCESS","GET_ITEMS_FAIL","GET_ITEMS","GET_TOTAL_SUCCESS","GET_TOTAL_FAIL","total","compare_total","parseFloat","price","compare_price","GET_TOTAL","toFixed","GET_ITEM_TOTAL_SUCCESS","GET_ITEM_TOTAL_FAIL","length","GET_ITEM_TOTAL","update_item","put","UPDATE_ITEM_FAIL","UPDATE_ITEM_SUCCESS","cart_item","index","parseInt","UPDATE_ITEM","remove_item","delete","REMOVE_ITEM_SUCCESS","REMOVE_ITEM_FAIL","new_cart","REMOVE_ITEM","GET_USER_PROFILE_SUCCESS","GET_USER_PROFILE_FAIL","update_user_profile","address_line_1","address_line_2","city","state_province_region","zipcode","phone","country_region","UPDATE_USER_PROFILE_SUCCESS","setAlert","UPDATE_USER_PROFILE_FAIL"],"sourceRoot":""}