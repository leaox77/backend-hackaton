{"version":3,"file":"static/js/117.501b7ac2.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/order.mjs","../node_modules/framer-motion/dist/es/stats/buffer.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/stats/animation-count.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/measure.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!target || !isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        if (target.setPointerCapture && startEvent.pointerId !== undefined) {\n            try {\n                target.setPointerCapture(startEvent.pointerId);\n            }\n            catch (e) { }\n        }\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            target.removeEventListener(\"pointerup\", onPointerUp);\n            target.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (target.releasePointerCapture &&\n                endEvent.pointerId !== undefined) {\n                try {\n                    target.releasePointerCapture(endEvent.pointerId);\n                }\n                catch (e) { }\n            }\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            const isOutside = !upEvent.isTrusted\n                ? false\n                : checkOutside(upEvent, target instanceof Element\n                    ? target.getBoundingClientRect()\n                    : {\n                        left: 0,\n                        top: 0,\n                        right: window.innerWidth,\n                        bottom: window.innerHeight,\n                    });\n            if (isOutside) {\n                onPointerEnd(upEvent, false);\n            }\n            else {\n                onPointerEnd(upEvent, !(target instanceof Element) ||\n                    isNodeOrChild(target, upEvent.target));\n            }\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        target.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        target.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n        target.addEventListener(\"lostpointercapture\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        target = options.useGlobalTarget ? window : target;\n        let canAddKeyboardAccessibility = false;\n        if (target instanceof HTMLElement) {\n            canAddKeyboardAccessibility = true;\n            if (!isElementKeyboardAccessible(target) &&\n                target.getAttribute(\"tabindex\") === null) {\n                target.tabIndex = 0;\n            }\n        }\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (canAddKeyboardAccessibility) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n        }\n    });\n    return cancelEvents;\n}\nfunction checkOutside(event, rect) {\n    return (event.clientX < rect.left ||\n        event.clientX > rect.right ||\n        event.clientY < rect.top ||\n        event.clientY > rect.bottom);\n}\n\nexport { press };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.4.4\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { activeAnimations } from '../../stats/animation-count.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        activeAnimations.mainThread++;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\nimport { activeAnimations } from '../../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../../stats/buffer.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            if (event.currentTarget instanceof Element &&\n                event.currentTarget.hasPointerCapture &&\n                event.pointerId !== undefined) {\n                try {\n                    if (!event.currentTarget.hasPointerCapture(event.pointerId)) {\n                        return;\n                    }\n                }\n                catch (e) { }\n            }\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            capturePointer(event, \"release\");\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\" ||\n                event.type === \"lostpointercapture\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        capturePointer(event, \"set\");\n        this.removeListeners = pipe(addPointerEvent(event.currentTarget, \"pointermove\", this.handlePointerMove), addPointerEvent(event.currentTarget, \"pointerup\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"pointercancel\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"lostpointercapture\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\nfunction capturePointer(event, action) {\n    const actionName = `${action}PointerCapture`;\n    if (event.currentTarget instanceof Element &&\n        actionName in event.currentTarget &&\n        event.pointerId !== undefined) {\n        try {\n            event.currentTarget[actionName](event.pointerId);\n        }\n        catch (e) { }\n    }\n}\n\nexport { PanSession };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { setDragLock } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { PanSession } from './PanSession.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\n\nexport { updateSVGDimensions };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.4.4\", `Attempting to mix Motion versions ${nextValue.version} with 12.4.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["usePresence","subscribe","arguments","length","undefined","context","useContext","PresenceContext","isPresent","onExitComplete","register","id","useId","useEffect","safeToRemove","useCallback","LayoutGroupContext","createContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","get","_target","key","has","set","isAnimationControls","v","start","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","variants","resolveVariant","getProps","memo","callback","result","supportsScrollTimeline","window","ScrollTimeline","BaseGroupPlaybackControls","constructor","animations","this","stop","runAll","filter","Boolean","finished","Promise","all","map","animation","getAll","propName","setAll","newValue","i","attachTimeline","timeline","fallback","subscriptions","cancel","time","speed","startTime","duration","max","Math","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","getValueTransition","transition","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","isGenerator","type","onfinish","isBezierDefinition","easing","Array","isArray","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","_a","supportsLinearEasing","document","createElement","animate","opacity","e","progress","from","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","round","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_ref","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","isDragging","x","y","isDragActive","setupGesture","elementOrSelector","options","elements","scope","selectorCache","EventTarget","root","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","Set","isPressing","WeakSet","filterEvents","firePointerEvent","target","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","startEvent","currentTarget","add","setPointerCapture","pointerId","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","releasePointerCapture","delete","upEvent","isOutside","isTrusted","rect","Element","getBoundingClientRect","left","top","right","innerWidth","bottom","innerHeight","clientX","clientY","cancelEvent","addEventListener","canAddKeyboardAccessibility","element","useGlobalTarget","HTMLElement","tagName","tabIndex","getAttribute","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","noop","any","transformPropOrder","transformProps","positionalKeys","isKeyframesTarget","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","latestFrameData","numCalls","triggerCallback","step","schedule","queue","process","frameData","frameloop","push","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","newTime","queueMicrotask","addUniqueItem","arr","item","indexOf","removeItem","index","splice","SubscriptionManager","handler","notify","numSubscriptions","getSize","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","getValue","addValue","isMotionValue","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","clamp","number","parse","transform","alpha","scale","default","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","keyframes","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","activeAnimations","layout","mainThread","waapi","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","transformers","_key","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","finally","startWaapiAnimation","pendingTimeline","playbackRate","playState","sampleTime","supports","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","updateAnimationControlsSubscription","unmountControls","mount","prevAnimate","prevProps","unmount","prevIsPresent","prevPresenceContext","exitAnimation","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","isRefObject","ref","PanSession","handlers","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","hasPointerCapture","handlePointerUp","capturePointer","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","action","actionName","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","jsx","applyTo","boxShadow","compareByDepth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","useIsomorphicLayoutEffect","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","isBrowser","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","lowercaseSVGElements","isSVGComponent","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","updateSVGDimensions","getBBox","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","scrapeMotionValuesFromProps$1","charAt","layoutProps","svgMotionConfig","needsMeasure","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","updateDimensions","motion","createDomVisualElement","useLayoutEffect"],"sourceRoot":""}