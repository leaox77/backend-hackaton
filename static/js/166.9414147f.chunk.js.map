{"version":3,"file":"static/js/166.9414147f.chunk.js","mappings":"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","sources":["components/cart/CartItem.js","helpers/fixedCity.js","components/checkout/ShippingForm.js","containers/pages/checkout/Checkout.jsx","redux/actions/shipping.js","redux/actions/coupons.js","redux/actions/paymentQR.js","redux/actions/payment.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { XIcon, CheckIcon, ClockIcon } from \"@heroicons/react/solid\";\r\nimport { connect } from \"react-redux\";\r\nconst CartItem = ({\r\n    item,\r\n    count,\r\n    update_item,\r\n    remove_item,\r\n    render,\r\n    setRender,\r\n    setAlert,\r\n    user\r\n}) => {\r\n    const [itemCount, setItemCount] = useState(1);\r\n    useEffect(() => {\r\n        if (count) setItemCount(count);\r\n    }, [count]);\r\n\r\n    const onChange = (e) => setItemCount(e.target.value);\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (item?.product?.quantity >= itemCount) {\r\n                await update_item(item, itemCount);\r\n                setRender(!render);\r\n            } else {\r\n                setAlert(\"No hay suficiente stock disponible\", \"danger\");\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error actualizando el carrito:\", err);\r\n            setAlert(\"Error al actualizar el producto\", \"danger\");\r\n        }\r\n    };\r\n    const removeItemHandler = async () => {\r\n        try {\r\n            await remove_item(item);\r\n            setRender(!render);\r\n        } catch (err) {\r\n            console.error(\"Error eliminando el producto:\", err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <li className=\"flex py-6 sm:py-10\">\r\n            <div className=\"flex-shrink-0\">\r\n                <img\r\n                    src={item?.product?.photo}\r\n                    alt={`Imagen del producto ${item?.product?.name || \"\"}`}\r\n                    className=\"w-24 h-24 rounded-md object-center object-cover sm:w-48 sm:h-48\"\r\n                />\r\n            </div>\r\n\r\n            {/* Información del producto */}\r\n            <div className=\"ml-4 flex-1 flex flex-col justify-between sm:ml-6\">\r\n                <div className=\"relative pr-9 sm:grid sm:grid-cols-2 sm:gap-x-6 sm:pr-0\">\r\n                    <div>\r\n                        <div className=\"flex justify-between\">\r\n                            <h3 className=\"text-sm\">\r\n                                <Link\r\n                                    to={`/product/${item?.product?.id}`}\r\n                                    className=\"font-medium text-gray-700 hover:text-gray-800\"\r\n                                >\r\n                                    {item?.product?.name}\r\n                                </Link>\r\n                            </h3>\r\n                        </div>\r\n                        <div className=\"mt-1 flex text-sm\">\r\n                            <p className=\"text-gray-500\">Color</p>\r\n                        </div>\r\n                        <p className=\"mt-1 text-sm font-medium text-gray-900\">\r\n                            {user.mayorista_tipo === 0 ? `${item?.product?.price} Bs` :\r\n                            user.mayorista_tipo === 1 ? `${item?.product?.price_mayorista_1} Bs` :\r\n                            user.mayorista_tipo === 2 ? `${item?.product?.price_mayorista_2} Bs` :\r\n                            user.mayorista_tipo === 3 ? `${item?.product?.price_mayorista_3} Bs` :\r\n                            \"N/A\"}  \r\n                        </p>\r\n                    </div>\r\n\r\n                    {/* Selector de cantidad */}\r\n                    <div className=\"mt-4 sm:mt-0 sm:pr-9\">\r\n                        <form onSubmit={onSubmit}>\r\n                            <select\r\n                                name=\"item_count\"\r\n                                onChange={onChange}\r\n                                value={itemCount}\r\n                                className=\"max-w-full rounded-md border border-gray-300 py-1.5 text-base leading-5 font-medium text-gray-700 text-left shadow-sm focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                            >\r\n                                {Array.from({ length: item?.product?.quantity || 1 }, (_, i) => (\r\n                                    <option key={i + 1} value={i + 1}>\r\n                                        {i + 1}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"-m-2 p-2 inline-flex text-gray-400 hover:text-gray-500\"\r\n                            >\r\n                                <span className=\"mx-2\">Actualizar</span>\r\n                                \r\n                            </button>\r\n                        </form>\r\n\r\n                        {/* Botón para eliminar el producto */}\r\n                        <div className=\"absolute top-0 right-0\">\r\n                            <button\r\n                                onClick={removeItemHandler}\r\n                                className=\"-m-2 p-2 inline-flex text-gray-400 hover:text-gray-500\"\r\n                            >\r\n                                <span className=\"sr-only\">Eliminar</span>\r\n                                <XIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Estado de stock */}\r\n                <p className=\"mt-4 flex text-sm text-gray-700 space-x-2\">\r\n                    {item?.product?.quantity > 0 ? (\r\n                        <>\r\n                            <CheckIcon\r\n                                className=\"flex-shrink-0 h-5 w-5 text-green-500\"\r\n                                aria-hidden=\"false\"\r\n                                aria-label=\"En Stock\"\r\n                            />\r\n                            <span>En Stock</span>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <ClockIcon\r\n                                className=\"flex-shrink-0 h-5 w-5 text-gray-300\"\r\n                                aria-hidden=\"false\"\r\n                                aria-label=\"Agotado\"\r\n                            />\r\n                            <span>Agotado</span>\r\n                        </>\r\n                    )}\r\n                </p>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    user: state.Auth.user,\r\n  });\r\nexport default connect(mapStateToProps, {})(CartItem)\r\n\r\n  ","export const cities = [\r\n    {\r\n        name: 'Sucursal1'\r\n    },\r\n    {\r\n        name: 'Sucursal2'\r\n    },\r\n    {\r\n        name: 'Sucursal3'\r\n    },\r\n    {\r\n        name: 'Sucursal4'\r\n    },\r\n    {\r\n        name: 'Sucursal5'\r\n    }\r\n];","import { QuestionMarkCircleIcon } from '@heroicons/react/solid'\r\nimport { TicketIcon } from '@heroicons/react/outline'\r\nimport { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { cities } from '../../helpers/fixedCity'\r\nconst ShippingForm = ({\r\n    full_name,\r\n    address_line_1,\r\n    address_line_2,\r\n    state_province_region,\r\n    age,\r\n    telephone_number,\r\n    onChange,\r\n    buy,\r\n    user,\r\n    renderShipping,\r\n    total_amount,\r\n    total_compare_amount,\r\n    estimated_tax,\r\n    shipping_cost,\r\n    shipping_id,\r\n    shipping,\r\n    renderPaymentInfo,\r\n    coupon,\r\n    total_after_coupon\r\n}) => {\r\n    return (\r\n        <section\r\n            aria-labelledby=\"summary-heading\"\r\n            className=\"mt-16 bg-gray-100 rounded-lg px-4 py-6 sm:p-6 lg:p-8 lg:mt-0 lg:col-span-5\"\r\n          >\r\n            <h2 id=\"summary-heading\" className=\"text-lg font-medium text-gray-900\">\r\n            Resumen del pedido\r\n            </h2>\r\n\r\n            <dl className=\"mt-6 space-y-4\">\r\n              <div className=\"flex items-center justify-between\">\r\n                {renderShipping()}\r\n              </div>\r\n              \r\n              {/* <div className=\"flex items-center justify-between\">\r\n                <form onSubmit={e => apply_coupon(e)}>\r\n                    <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n                        Cupón de descuento\r\n                    </label>\r\n                    <div className=\"mt-1 flex rounded-md shadow-sm\">\r\n                        <div className=\"relative flex items-stretch flex-grow focus-within:z-10\">\r\n                        \r\n                        <input\r\n                            name='coupon_name'\r\n                            type='text'\r\n                            onChange={e => onChange(e)}\r\n                            value={coupon_name}\r\n                            className=\"focus:ring-midnight-blue focus:border-midnight-blue block w-full rounded-none rounded-l-md pl-4 sm:text-sm border-gray-300\"\r\n                            placeholder=\"Ingrese código\"\r\n                        />\r\n                        </div>\r\n                        <button\r\n                        type=\"submit\"\r\n                        className=\"-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-midnight-blue focus:border-midnight-blue\"\r\n                        >\r\n                        <TicketIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n                        <span>Usar Cupón</span>\r\n                        </button>\r\n                        \r\n                    </div>\r\n                    \r\n                </form>\r\n              </div> */}\r\n\r\n              {\r\n                    coupon && \r\n                    coupon !== null &&\r\n                    coupon !== undefined ? (\r\n                        <div\r\n                            className='text-blue-500'\r\n                        >\r\n                            Cupón: {coupon.name} aplicadoo.\r\n                        </div>\r\n                    ) : (\r\n                        <Fragment></Fragment>\r\n                    )\r\n                }\r\n\r\n              <div className=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\r\n                <dt className=\"flex items-center text-sm text-gray-600\">\r\n                  <span>Estimación de envío</span>\r\n                  <Link to='' className=\"ml-2 flex-shrink-0 text-gray-400 hover:text-gray-500\">\r\n                    <span className=\"sr-only\">Obtener más información sobre cómo se calcula el envío</span>\r\n                    <QuestionMarkCircleIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                  </Link>\r\n                </dt>\r\n                <dd className=\"text-sm font-medium text-gray-900\">{shipping && shipping_id !== 0 ? <>Bs{shipping_cost}</>:<div className=\"text-red-500\">(Por favor seleccione la opción de envío)</div>}</dd>\r\n              </div>\r\n\r\n              <div className=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\r\n                <dt className=\"flex text-sm text-gray-600\">\r\n                  <span>Estimación de Impuestos</span>\r\n                  <Link to='' className=\"ml-2 flex-shrink-0 text-gray-400 hover:text-gray-500\">\r\n                    <span className=\"sr-only\">Obtener más información sobre cómo se calculan los impuestos</span>\r\n                    <QuestionMarkCircleIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                  </Link>\r\n                </dt>\r\n                <dd className=\"text-sm font-medium text-gray-900\">{estimated_tax}Bs</dd>\r\n              </div>\r\n              \r\n              <div className=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\r\n                <dt className=\"flex text-sm text-gray-600\">\r\n                  <span>Subtotal</span>\r\n                </dt>\r\n                <dd className=\"text-sm font-medium text-gray-900\">{total_compare_amount}Bs</dd>\r\n              </div>\r\n\r\n              {\r\n                  coupon && \r\n                  coupon !== null && \r\n                  coupon !== undefined ?\r\n                  <>\r\n                    <div className=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\r\n                        <dt className=\"flex text-sm text-gray-600\">\r\n                        <span>Descuento total: </span>\r\n                        </dt>\r\n                        <dd className=\"text-sm font-medium text-gray-900\">{total_after_coupon}Bs</dd>\r\n                    </div>\r\n                    <div className=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\r\n                        <dt className=\"text-base font-medium text-gray-900\">Total del pedido</dt>\r\n                        <dd className=\"text-base font-medium text-gray-900\">{total_amount}Bs</dd>\r\n                    </div>\r\n                    </>\r\n                        :\r\n                    <div className=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\r\n                        <dt className=\"text-base font-medium text-gray-900\">Total del pedido</dt>\r\n                        <dd className=\"text-base font-medium text-gray-900\">{total_amount}Bs</dd>\r\n                    </div>\r\n              }\r\n            </dl>\r\n\r\n            <form onSubmit={e => buy(e)}>\r\n                <div className=\" px-4 py-5  mt-4 sm:px-6\">\r\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Dirección de envío:</h3>\r\n                </div>\r\n                \r\n                <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-gray-200 sm:pt-5\">\r\n                    <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n                        Nombre completo\r\n                    </label>\r\n                    <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                        <div className=\"max-w-lg flex rounded-md shadow-sm\">\r\n                        <input\r\n                            type='text'\r\n                            name='full_name'\r\n                            placeholder={`${user.first_name} ${user.last_name}`}\r\n                            onChange={e => onChange(e)}\r\n                            value={full_name}\r\n                            required\r\n                            className=\"flex-1 block w-full focus:ring-midnight-blue focus:border-midnight-blue min-w-0 rounded-md sm:text-sm border-gray-300\"\r\n                        />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-gray-200 sm:pt-5\">\r\n                    <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2 \">\r\n                        Dirección 1*\r\n                    </label>\r\n                    <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                        <div className=\"max-w-lg flex rounded-md shadow-sm\">\r\n                        <input\r\n                            type='text'\r\n                            name='address_line_1'\r\n                            onChange={e => onChange(e)}\r\n                            value={address_line_1}\r\n                            required\r\n                            className=\"flex-1 block w-full focus:ring-midnight-blue focus:border-midnight-blue min-w-0 rounded-md sm:text-sm border-gray-300 px-2\"\r\n                        />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-gray-200 sm:pt-5\">\r\n                    <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n                        Dirección 2*\r\n                    </label>\r\n                    <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                        <div className=\"max-w-lg flex rounded-md shadow-sm\">\r\n                        <input\r\n                            type='text'\r\n                            name='address_line_2'\r\n                            onChange={e => onChange(e)}\r\n                            value={address_line_2}\r\n                            className=\"flex-1 block w-full focus:ring-midnight-blue focus:border-midnight-blue min-w-0 rounded-md sm:text-sm border-gray-300 px-2\"\r\n                        />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-gray-200 sm:pt-5\">\r\n                    <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n                        Estado/Provincia*\r\n                    </label>\r\n                    <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                        <div className=\"max-w-lg flex rounded-md shadow-sm\">\r\n                        <input\r\n                            type='text'\r\n                            name='state_province_region'\r\n                            onChange={e => onChange(e)}\r\n                            value={state_province_region}\r\n                            required\r\n                            className=\"flex-1 block w-full focus:ring-midnight-blue focus:border-midnight-blue min-w-0 rounded-md sm:text-sm border-gray-300 px-2\"\r\n                        />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-gray-200 sm:pt-5\">\r\n                    <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n                        Edad\r\n                    </label>\r\n                    <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                        <div className=\"max-w-lg flex rounded-md shadow-sm\">\r\n                        <input\r\n                            type='number'\r\n                            name='age'\r\n                            onChange={e => onChange(e)}\r\n                            value={age}\r\n                            required\r\n                            className=\"flex-1 block w-full focus:ring-midnight-blue focus:border-midnight-blue min-w-0 rounded-md sm:text-sm border-gray-300 px-2\"\r\n                        />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"\">\r\n                  <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n                    Sucursales\r\n                  </label>\r\n                  <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-gray-200 sm:pt-5\">\r\n                    <div className=\"sm:col-span-2\">\r\n                      <select\r\n                        id=\"city\"\r\n                        name=\"city\"\r\n                        onChange={e => onChange(e)}\r\n                        className=\"max-w-lg block focus:ring-midnight-blue focus:border-midnight-blue w-full shadow-sm sm:max-w-xs sm:text-sm border-gray-300 rounded-md\"\r\n                        defaultValue=\"\"\r\n                      >\r\n                        <option value=\"\" disabled>\r\n                          Escoge tu sucursal\r\n                        </option>\r\n                        {cities &&\r\n                          cities.map((city, index) => (\r\n                            <option key={index} value={city.name}>\r\n                              {city.name}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"sm:grid sm:grid-cols-3 mb-4 sm:gap-4 sm:items-start  sm:border-gray-200 sm:pt-5\">\r\n                    <label htmlFor=\"telephone_number\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n                        Celular*\r\n                    </label>\r\n                    <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                        <div className=\"max-w-lg flex rounded-md shadow-sm\">\r\n                        <input\r\n                            type='tel'\r\n                            name='telephone_number'\r\n                            onChange={e => onChange(e)}\r\n                            value={telephone_number}\r\n                            required\r\n                            className=\"flex-1 block w-full focus:ring-midnight-blue focus:border-midnight-blue min-w-0 rounded-md sm:text-sm border-gray-300 px-2\"\r\n                        />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            {renderPaymentInfo()}\r\n            </form>\r\n          </section>\r\n    )\r\n}\r\n\r\nexport default ShippingForm;","import Layout from '../../../hocs/Layout';\r\nimport { Navigate } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport CartItem from '../../../components/cart/CartItem';\r\nimport { setAlert } from '../../../redux/actions/alert';\r\nimport { update_item, remove_item } from '../../../redux/actions/cart';\r\nimport { useEffect, useState } from 'react';\r\nimport { get_shipping_options } from '../../../redux/actions/shipping';\r\nimport { check_coupon } from '../../../redux/actions/coupons';\r\nimport { refresh } from '../../../redux/actions/auth';\r\nimport { get_payment_total, get_client_token, process_payment } from '../../../redux/actions/payment';\r\nimport { set_reference, generate_qr_payment, verify_payment } from \"../../../redux/actions/paymentQR\";\r\nimport DropIn from 'braintree-web-drop-in-react';\r\nimport { Oval } from 'react-loader-spinner';\r\nimport { cities } from '../../../helpers/fixedCity';\r\nimport ShippingForm from '../../../components/checkout/ShippingForm';\r\nimport { QRCodeCanvas } from \"qrcode.react\";\r\n\r\nconst Checkout = ({\r\n  isAuthenticated,\r\n  items,\r\n  update_item,\r\n  remove_item,\r\n  setAlert,\r\n  get_shipping_options,\r\n  shipping,\r\n  get_payment_total,\r\n  get_client_token,\r\n  process_payment,\r\n  user,\r\n  clientToken,\r\n  made_payment,\r\n  loading,\r\n  total_after_coupon,\r\n  total_compare_amount,\r\n  estimated_tax,\r\n  shipping_cost,\r\n  check_coupon,\r\n  coupon,\r\n  reference,\r\n  qrData,\r\n  qrLoading,\r\n  paymentStatus,\r\n  set_reference,\r\n  generate_qr_payment,\r\n  verify_payment\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    full_name: '',\r\n    address_line_1: '',\r\n    address_line_2: '',\r\n    city: '',\r\n    state_province_region: '',\r\n    age: '0',\r\n    telephone_number: '',\r\n    coupon_name: '0',\r\n    shipping_id: 0,\r\n  });\r\n\r\n  const [data, setData] = useState({ instance: {} });\r\n  const [paymentMethod, setPaymentMethod] = useState('braintree');\r\n  const [showQR, setShowQR] = useState(false);\r\n  const [referencePrefix, setReferencePrefix] = useState('');\r\n  const [render, setRender] = useState(false);\r\n\r\n  const {\r\n    full_name,\r\n    address_line_1,\r\n    address_line_2,\r\n    city,\r\n    state_province_region,\r\n    age,\r\n    telephone_number,\r\n    coupon_name,\r\n    shipping_id,\r\n  } = formData;\r\n\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const calculateTotalAmount = () => {\r\n    if (!items || items.length === 0) return 0;\r\n    return items.reduce((total, item) => {\r\n      let price = item.product?.price || 0;\r\n      if (user?.mayorista_tipo === 1) price = item.product?.price_mayorista_1 || price;\r\n      else if (user?.mayorista_tipo === 2) price = item.product?.price_mayorista_2 || price;\r\n      else if (user?.mayorista_tipo === 3) price = item.product?.price_mayorista_3 || price;\r\n      return total + price * item.count;\r\n    }, 0);\r\n  };\r\n\r\n  const totalPedido = calculateTotalAmount();\r\n\r\n  const buy = async e => {\r\n    e.preventDefault();\r\n    let nonce = await data.instance.requestPaymentMethod();\r\n    const applied_coupon = coupon ? coupon.name : '';\r\n    process_payment(\r\n      nonce,\r\n      shipping_id,\r\n      applied_coupon,\r\n      full_name,\r\n      address_line_1,\r\n      address_line_2,\r\n      city,\r\n      state_province_region,\r\n      age,\r\n      telephone_number,\r\n    );\r\n  };\r\n\r\n  const handleGenerateQR = () => {\r\n    if (!reference.trim()) {\r\n      setAlert('Por favor, ingresa una referencia válida.', 'error');\r\n      return;\r\n    }\r\n    const amountToPay = total_after_coupon || totalPedido;\r\n    generate_qr_payment(amountToPay, reference);\r\n    setShowQR(true);\r\n  };\r\n\r\n  const completeQRPaymentPurchase = () => {\r\n    const mockNonce = 'qr-payment-completed-' + Date.now();\r\n    const applied_coupon = coupon ? coupon.name : '';\r\n    process_payment(\r\n      mockNonce,\r\n      shipping_id,\r\n      applied_coupon,\r\n      full_name,\r\n      address_line_1,\r\n      address_line_2,\r\n      city,\r\n      state_province_region,\r\n      age,\r\n      telephone_number,\r\n      'qr'\r\n    );\r\n    set_reference('');\r\n  };\r\n  \r\n  const apply_coupon = async e => {\r\n    e.preventDefault();\r\n    check_coupon(coupon_name);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    get_shipping_options();\r\n  }, [get_shipping_options]);\r\n\r\n  useEffect(() => {\r\n    get_client_token();\r\n  }, [user, get_client_token]);\r\n\r\n  useEffect(() => {\r\n    if (coupon) get_payment_total(shipping_id, coupon.name);\r\n    else get_payment_total(shipping_id, 'default');\r\n  }, [shipping_id, coupon, get_payment_total]);\r\n\r\n  useEffect(() => {\r\n    if (!qrData || !qrData.reference || paymentStatus !== \"pending\") return;\r\n    const interval = setInterval(() => verify_payment(), 5000);\r\n    return () => clearInterval(interval);\r\n  }, [qrData, paymentStatus, verify_payment]);\r\n\r\n  useEffect(() => {\r\n    const randomRef = 'REF-' + Math.floor(Math.random() * 1000000);\r\n    setReferencePrefix(randomRef);\r\n  }, []);\r\n\r\n  if (!isAuthenticated) return <Navigate to=\"/\" />;\r\n  if (made_payment) return <Navigate to=\"/thankyou\" />;\r\n\r\n  const showItems = () => (\r\n    <div>\r\n      {items?.length > 0 && items.map((item, index) => (\r\n        <CartItem\r\n          key={index}\r\n          item={item}\r\n          count={item.count}\r\n          update_item={update_item}\r\n          remove_item={remove_item}\r\n          render={render}\r\n          setRender={setRender}\r\n          setAlert={setAlert}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  const renderShipping = () => {\r\n    if (shipping) {\r\n      return (\r\n        <div className='mb-5'>\r\n          {shipping.map((shipping_option, index) => (\r\n            <div key={index}>\r\n              <input\r\n                onChange={onChange}\r\n                value={shipping_option.id}\r\n                name='shipping_id'\r\n                type='radio'\r\n                required\r\n              />\r\n              <label className='ml-4'>\r\n                {shipping_option.name} - Bs{shipping_option.price} ({shipping_option.time_to_delivery})\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderQRPayment = () => {\r\n    const referenceValue = reference.replace(referencePrefix + '_', '');\r\n    return (\r\n      <div className=\"mt-4\">\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"reference\" className=\"block text-sm font-medium text-gray-700\">\r\n            Referencia del pago\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"reference\"\r\n            placeholder=\"Ej. pedido-john\"\r\n            value={referenceValue}\r\n            onChange={(e) => set_reference(`${referencePrefix}_${e.target.value}`)}\r\n            className=\"w-full px-4 py-2 border rounded-lg mt-1\"\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          onClick={handleGenerateQR}\r\n          disabled={qrLoading}\r\n          className=\"w-full bg-midnight-blue border border-transparent rounded-md shadow-sm py-3 px-4 text-base font-medium text-white hover:bg-purple-night focus:outline-none\"\r\n        >\r\n          {qrLoading ? \"Generando QR...\" : \"Generar QR de pago\"}\r\n        </button>\r\n\r\n        {showQR && qrData && (\r\n          <div className=\"mt-6 flex flex-col items-center\">\r\n            <QRCodeCanvas\r\n              value={`Monto: ${total_after_coupon || totalPedido} BOB, Referencia: ${reference}`}\r\n              size={200}\r\n            />\r\n            <p className=\"mt-4 text-lg font-semibold\">Referencia: {reference}</p>\r\n            <p className=\"text-lg font-semibold\">\r\n              Estado:\r\n              <span className={`ml-2 px-3 py-1 rounded-full ${\r\n                paymentStatus === \"pending\" ? \"bg-yellow-500\" :\r\n                paymentStatus === \"paid\" ? \"bg-green-500\" : \"bg-red-500\"\r\n              } text-white`}>\r\n                {paymentStatus === \"pending\" ? \"Pendiente\" :\r\n                 paymentStatus === \"paid\" ? \"Pagado\" : \"Fallido\"}\r\n              </span>\r\n            </p>\r\n\r\n            {paymentStatus === \"pending\" && (\r\n              <p className=\"mt-2 text-sm text-gray-500\">\r\n                Escanea el QR para pagar. Verificando automáticamente...\r\n              </p>\r\n            )}\r\n\r\n            {paymentStatus === \"paid\" && (\r\n              <button\r\n                onClick={completeQRPaymentPurchase}\r\n                className=\"mt-4 bg-green-600 hover:bg-green-700 text-white font-semibold py-2 px-4 rounded\"\r\n              >\r\n                Verificar y completar compra\r\n              </button>\r\n            )}\r\n\r\n            {paymentStatus === \"failed\" && (\r\n              <p className=\"mt-4 text-red-600 font-medium\">\r\n                ⚠️ El pago ha fallado. Intenta nuevamente.\r\n              </p>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderBraintreePayment = () => {\r\n    if (!clientToken) {\r\n      return (\r\n        <button className=\"w-full bg-gray-600 text-white py-3 px-4 rounded\">\r\n          Generando token...\r\n        </button>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <DropIn\r\n          options={{ authorization: clientToken, paypal: { flow: 'vault' } }}\r\n          onInstance={instance => setData({ instance })}\r\n        />\r\n        <div className=\"mt-6\">\r\n          {loading ? (\r\n            <button className=\"w-full bg-midnight-blue text-white py-3 px-4 rounded\">\r\n              <Oval color=\"#fff\" height={20} width={20} />\r\n            </button>\r\n          ) : (\r\n            <button\r\n              type=\"submit\"\r\n              onClick={buy}\r\n              className=\"w-full bg-midnight-blue hover:bg-purple-night text-white py-3 px-4 rounded\"\r\n            >\r\n              Realizar Pedido\r\n            </button>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderPaymentSelection = () => (\r\n    <div className=\"mb-5\">\r\n      <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Método de pago</h3>\r\n      <div>\r\n        <input\r\n          id=\"payment-method-qr\"\r\n          name=\"payment-method\"\r\n          type=\"radio\"\r\n          checked={paymentMethod === 'qr'}\r\n          onChange={() => setPaymentMethod('qr')}\r\n          className=\"mr-2\"\r\n        />\r\n        <label htmlFor=\"payment-method-qr\" className=\"text-gray-700\">Pago con QR</label>\r\n      </div>\r\n      <div>\r\n        <input\r\n          id=\"payment-method-braintree\"\r\n          name=\"payment-method\"\r\n          type=\"radio\"\r\n          checked={paymentMethod === 'braintree'}\r\n          onChange={() => setPaymentMethod('braintree')}\r\n          className=\"mr-2\"\r\n        />\r\n        <label htmlFor=\"payment-method-braintree\" className=\"text-gray-700\">Pago con tarjeta</label>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderPaymentInfo = () => (\r\n    <>\r\n      {renderPaymentSelection()}\r\n      {paymentMethod === 'qr' ? renderQRPayment() : renderBraintreePayment()}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"bg-white\">\r\n        <div className=\"max-w-2xl mx-auto pt-16 pb-24 px-4 sm:px-6 lg:max-w-7xl lg:px-8\">\r\n          <h1 className=\"text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl\">Checkout</h1>\r\n          <div className=\"mt-12 lg:grid lg:grid-cols-12 lg:gap-x-12 lg:items-start xl:gap-x-16\">\r\n            <section aria-labelledby=\"cart-heading\" className=\"lg:col-span-7\">\r\n              <h2 id=\"cart-heading\" className=\"sr-only\">Artículos en su carrito</h2>\r\n              <ul className=\"border-t border-b border-gray-200 divide-y divide-gray-200\">\r\n                {showItems()}\r\n              </ul>\r\n            </section>\r\n\r\n            <ShippingForm\r\n              full_name={full_name}\r\n              address_line_1={address_line_1}\r\n              address_line_2={address_line_2}\r\n              city={cities}\r\n              state_province_region={state_province_region}\r\n              age={age}\r\n              telephone_number={telephone_number}\r\n              onChange={onChange}\r\n              buy={buy}\r\n              user={user}\r\n              renderShipping={renderShipping}\r\n              total_amount={totalPedido}\r\n              total_after_coupon={total_after_coupon}\r\n              total_compare_amount={total_compare_amount}\r\n              estimated_tax={estimated_tax}\r\n              shipping_cost={shipping_cost}\r\n              shipping_id={shipping_id}\r\n              shipping={shipping}\r\n              renderPaymentInfo={renderPaymentInfo}\r\n              coupon={coupon}\r\n              apply_coupon={apply_coupon}\r\n              coupon_name={coupon_name}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.Auth.isAuthenticated,\r\n  user: state.Auth.user,\r\n  items: state.Cart.items,\r\n  total_items: state.Cart.total_items,\r\n  shipping: state.Shipping.shipping,\r\n  clientToken: state.Payment.clientToken,\r\n  made_payment: state.Payment.made_payment,\r\n  loading: state.Payment.loading,\r\n  original_price: state.Payment.original_price,\r\n  total_after_coupon: state.Payment.total_after_coupon,\r\n  total_amount: state.Payment.total_amount,\r\n  total_compare_amount: state.Payment.total_compare_amount,\r\n  estimated_tax: state.Payment.estimated_tax,\r\n  shipping_cost: state.Payment.shipping_cost,\r\n  coupon: state.Coupons.coupon,\r\n  reference: state.PaymentQR.reference,\r\n  qrData: state.PaymentQR.qrData,\r\n  qrLoading: state.PaymentQR.loading,\r\n  paymentStatus: state.PaymentQR.paymentStatus,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  { \r\n    update_item, \r\n    remove_item, \r\n    setAlert, \r\n    get_shipping_options, \r\n    refresh, \r\n    get_payment_total, \r\n    get_client_token, \r\n    process_payment, \r\n    check_coupon,\r\n    set_reference,\r\n    generate_qr_payment,\r\n    verify_payment \r\n  }\r\n)(Checkout);\r\n","import axios from 'axios';\r\nimport {\r\n    GET_SHIPPING_OPTIONS_SUCCESS,\r\n    GET_SHIPPING_OPTIONS_FAIL\r\n} from './types';\r\n\r\nexport const get_shipping_options = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/shipping/get-shipping-options`, config);\r\n\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: GET_SHIPPING_OPTIONS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: GET_SHIPPING_OPTIONS_FAIL\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: GET_SHIPPING_OPTIONS_FAIL\r\n        });\r\n    }\r\n};","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    GET_COUPON_SUCCESS,\r\n    GET_COUPON_FAIL,\r\n} from './types';\r\n\r\nexport const check_coupon = coupon_name => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Authorization': `JWT ${localStorage.getItem('access')}`\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/coupons/check-coupon?coupon_name=${coupon_name}`, config);\r\n\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: GET_COUPON_SUCCESS,\r\n                payload: res.data\r\n            });\r\n            dispatch(setAlert('Coupon applied', 'green'));\r\n        } else {\r\n            dispatch({\r\n                type: GET_COUPON_FAIL\r\n            });\r\n            if (res.data.error) {\r\n                dispatch(setAlert(res.data.error, 'red'));\r\n            } else {\r\n                dispatch(setAlert('This coupon does not exist', 'red'));\r\n            }\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: GET_COUPON_FAIL\r\n        });\r\n        dispatch(setAlert('This coupon does not exist', 'red'));\r\n    }\r\n\r\n    window.scrollTo(0, 0);\r\n}","import axios from 'axios';\r\nimport {\r\n  SET_AMOUNT,\r\n  SET_REFERENCE,\r\n  SET_LOADING,\r\n  SET_QR_DATA,\r\n  SET_PAYMENT_STATUS\r\n} from './types.js';\r\n\r\nexport const set_amount = (amount) => ({ type: SET_AMOUNT, payload: amount });\r\nexport const set_reference = (reference) => ({ type: SET_REFERENCE, payload: reference });\r\n\r\nexport const generate_qr_payment = (amount, reference) => async (dispatch) => {\r\n  dispatch({ type: SET_LOADING, payload: true });\r\n\r\n  const config = {\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/api/qr_payment/generate-qr/`,\r\n      { amount, reference },\r\n      config\r\n    );\r\n\r\n    if (res.data?.qr_code_url && res.data?.reference) {\r\n      dispatch({ type: SET_QR_DATA, payload: res.data });\r\n    }\r\n  } catch (err) {\r\n    alert(\"Fallo en la generación del QR\");\r\n  }\r\n\r\n  dispatch({ type: SET_LOADING, payload: false });\r\n};\r\n\r\nexport const verify_payment = () => async (dispatch, getState) => {\r\n  const { qrData, paymentStatus } = getState().PaymentQR;\r\n  if (!qrData || !qrData.reference || paymentStatus === \"paid\") return;\r\n\r\n  const config = {\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/api/qr_payment/verify-payment/`,\r\n      { reference: qrData.reference },\r\n      config\r\n    );\r\n\r\n    if (res.data?.success) {\r\n      dispatch({ type: SET_PAYMENT_STATUS, payload: \"paid\" });\r\n    }\r\n  } catch (err) {\r\n    console.error(\"Verificación fallida:\", err);\r\n  }\r\n};\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport { get_item_total } from './cart';\r\nimport {\r\n    GET_PAYMENT_TOTAL_SUCCESS,\r\n    GET_PAYMENT_TOTAL_FAIL,\r\n    LOAD_BT_TOKEN_SUCCESS,\r\n    LOAD_BT_TOKEN_FAIL,\r\n    PAYMENT_SUCCESS,\r\n    PAYMENT_FAIL,\r\n    RESET_PAYMENT_INFO,\r\n    SET_PAYMENT_LOADING,\r\n    REMOVE_PAYMENT_LOADING\r\n} from './types';\r\n\r\n// Obtener total del pago \r\nexport const get_payment_total = (shipping_id, coupon_name) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Authorization': `JWT ${localStorage.getItem('access')}` \r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(\r\n            `${process.env.REACT_APP_API_URL}/api/payment/get-payment-total?shipping_id=${shipping_id}&coupon_name=${coupon_name}`,\r\n            config\r\n        );\r\n\r\n        if (res.status === 200 && !res.data.error) {\r\n            dispatch({\r\n                type: GET_PAYMENT_TOTAL_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: GET_PAYMENT_TOTAL_FAIL\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_PAYMENT_TOTAL_FAIL\r\n        });\r\n    }\r\n}\r\n\r\n// Obtener el token de cliente de Braintree\r\nexport const get_client_token = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Authorization': `JWT ${localStorage.getItem('access')}`\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/payment/get-token`, config);\r\n\r\n        if (res.status === 200) {\r\n            dispatch({\r\n                type: LOAD_BT_TOKEN_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: LOAD_BT_TOKEN_FAIL\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOAD_BT_TOKEN_FAIL\r\n        });\r\n    }\r\n}\r\n\r\n// Procesar el pago \r\nexport const process_payment = (\r\n    nonce,\r\n    shipping_id,\r\n    coupon_name,\r\n    full_name,\r\n    address_line_1,\r\n    address_line_2,\r\n    city,\r\n    state_province_region,\r\n    age,\r\n    telephone_number\r\n) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `JWT ${localStorage.getItem('access')}`\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        nonce,\r\n        shipping_id,\r\n        coupon_name,\r\n        full_name,\r\n        address_line_1,\r\n        address_line_2,\r\n        city,\r\n        state_province_region,\r\n        age,\r\n        telephone_number,\r\n    });\r\n\r\n    dispatch({\r\n        type: SET_PAYMENT_LOADING\r\n    });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/payment/make-payment`, body, config);\r\n\r\n        if (res.status === 200 && res.data.success) {\r\n            dispatch({\r\n                type: PAYMENT_SUCCESS\r\n            });\r\n            dispatch(setAlert(res.data.success, 'green'));\r\n            dispatch(get_item_total()); \r\n        } else {\r\n            dispatch({\r\n                type: PAYMENT_FAIL\r\n            });\r\n            dispatch(setAlert(res.data.error, 'red'));\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PAYMENT_FAIL\r\n        });\r\n        dispatch(setAlert('Error processing payment', 'red'));  // Mensaje genérico si falla el procesamiento\r\n    }\r\n\r\n    dispatch({\r\n        type: REMOVE_PAYMENT_LOADING\r\n    });\r\n\r\n    window.scrollTo(0, 0);  \r\n}\r\n\r\n// Resetear\r\nexport const reset = () => dispatch => {\r\n    dispatch({\r\n        type: RESET_PAYMENT_INFO\r\n    });\r\n};\r\n"],"names":["connect","state","user","Auth","_ref","_item$product2","_item$product3","_item$product4","_item$product5","_item$product6","_item$product7","_item$product8","_item$product9","_item$product10","_item$product11","item","count","update_item","remove_item","render","setRender","setAlert","itemCount","setItemCount","useState","useEffect","_jsxs","className","children","_jsx","src","product","photo","alt","name","Link","to","id","mayorista_tipo","price","price_mayorista_1","price_mayorista_2","price_mayorista_3","onSubmit","async","e","preventDefault","_item$product","quantity","err","console","error","onChange","target","value","Array","from","length","_","i","type","onClick","XIcon","_Fragment","CheckIcon","ClockIcon","cities","full_name","address_line_1","address_line_2","state_province_region","age","telephone_number","buy","renderShipping","total_amount","total_compare_amount","estimated_tax","shipping_cost","shipping_id","shipping","renderPaymentInfo","coupon","total_after_coupon","undefined","Fragment","QuestionMarkCircleIcon","htmlFor","placeholder","first_name","last_name","required","defaultValue","disabled","map","city","index","isAuthenticated","items","Cart","total_items","Shipping","clientToken","Payment","made_payment","loading","original_price","Coupons","reference","PaymentQR","qrData","qrLoading","paymentStatus","get_shipping_options","config","headers","res","axios","get","status","dispatch","GET_SHIPPING_OPTIONS_SUCCESS","payload","data","GET_SHIPPING_OPTIONS_FAIL","refresh","get_payment_total","get_client_token","process_payment","check_coupon","coupon_name","localStorage","getItem","GET_COUPON_SUCCESS","GET_COUPON_FAIL","window","scrollTo","set_reference","SET_REFERENCE","generate_qr_payment","amount","SET_LOADING","_res$data","_res$data2","post","qr_code_url","SET_QR_DATA","alert","verify_payment","getState","_res$data3","success","SET_PAYMENT_STATUS","formData","setFormData","setData","instance","paymentMethod","setPaymentMethod","showQR","setShowQR","referencePrefix","setReferencePrefix","totalPedido","reduce","total","nonce","requestPaymentMethod","applied_coupon","handleGenerateQR","trim","completeQRPaymentPurchase","mockNonce","Date","now","interval","setInterval","clearInterval","randomRef","Math","floor","random","Navigate","renderQRPayment","referenceValue","replace","QRCodeCanvas","size","Layout","CartItem","ShippingForm","shipping_option","time_to_delivery","checked","DropIn","options","authorization","paypal","flow","onInstance","Oval","color","height","width","apply_coupon","GET_PAYMENT_TOTAL_FAIL","GET_PAYMENT_TOTAL_SUCCESS","LOAD_BT_TOKEN_SUCCESS","LOAD_BT_TOKEN_FAIL","body","JSON","stringify","SET_PAYMENT_LOADING","PAYMENT_SUCCESS","get_item_total","PAYMENT_FAIL","REMOVE_PAYMENT_LOADING","reset","RESET_PAYMENT_INFO"],"sourceRoot":""}