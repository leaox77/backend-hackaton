{"version":3,"file":"static/js/16.9ae46b13.chunk.js","mappings":"uMAOA,MA8EA,GAAeA,EAAAA,EAAAA,KAJSC,IAAK,CAC3BC,QAASD,EAAME,KAAKD,WAGkB,CACtCE,eACF,MAFA,EA9EsBC,IAGf,IAHgB,eACrBD,EAAc,QACdF,GACDG,GAECC,EAAAA,EAAAA,YAAU,KACRC,OAAOC,SAAS,EAAG,EAAE,GACpB,IAEH,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,IAExCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,CACvCG,MAAO,MAGH,MAAEA,GAAUF,EAQlB,OAAIH,IAAgBP,GACXa,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAG,OAGpBF,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CAAAC,UACLJ,EAAAA,EAAAA,KAAA,OAAKK,UAAU,uDAAsDD,UACnEE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,2FAA0FD,SAAA,EACvGJ,EAAAA,EAAAA,KAAA,OAAKK,UAAU,gKACbC,EAAAA,EAAAA,MAAA,OAAKD,UAAU,2CAA0CD,SAAA,EACvDJ,EAAAA,EAAAA,KAAA,MAAIK,UAAU,qEAAoED,SAAC,6BACjFJ,EAAAA,EAAAA,KAAA,OAAKK,UAAU,4BAA2BD,UACxCJ,EAAAA,EAAAA,KAAA,OAAKK,UAAU,YAAWD,UACxBE,EAAAA,EAAAA,MAAA,QAAMC,SAAUC,GAlBjBA,KACfA,EAAEC,iBACFpB,EAAeU,GACfJ,GAAe,EAAK,EAeiBY,CAASC,GAAIH,UAAU,YAAWD,SAAA,EACrDE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEJ,EAAAA,EAAAA,KAAA,SAAOU,QAAQ,QAAQL,UAAU,0CAAyCD,SAAC,YAG3EJ,EAAAA,EAAAA,KAAA,OAAKK,UAAU,OAAMD,UACnBJ,EAAAA,EAAAA,KAAA,SACEW,KAAK,QACLC,MAAOb,EACPc,SAAUL,GA5BnBA,IAAKV,EAAY,IAAKD,EAAU,CAACW,EAAEM,OAAOH,MAAOH,EAAEM,OAAOF,QA4BlCC,CAASL,GACxBO,KAAK,QACLC,YAAY,QACZC,UAAQ,EACRZ,UAAU,8LAKhBL,EAAAA,EAAAA,KAAA,OAAAI,SACGjB,GACCa,EAAAA,EAAAA,KAAA,UAAQK,UAAU,iOAAgOD,UAChPJ,EAAAA,EAAAA,KAACkB,EAAAA,GAAI,CAACC,MAAM,OAAOC,MAAO,GAAIC,OAAQ,GAAIC,UAAU,eAGtDtB,EAAAA,EAAAA,KAAA,UAAQe,KAAK,SAASV,UAAU,sOAAqOD,SAAC,uCAWnR,G,sIC3Db,MAuBA,GAAenB,EAAAA,EAAAA,IAAQ,KAAM,CACzBsC,oBAAmB,KACnBC,UAAS,KACTC,QAAO,KACPC,UAAS,KACTC,UAAS,KACTC,eAAc,KACdC,iBACJ,KARA,EAvBgBC,KAEZvC,EAAAA,EAAAA,YAAU,KACNuC,EAAML,UACNK,EAAMP,sBACNO,EAAMN,YACNM,EAAMJ,YACNI,EAAMH,YACNG,EAAMF,iBACNE,EAAMD,kBAAkB,GACzB,KAGCvB,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACIJ,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,KACP/B,EAAAA,EAAAA,KAACgC,EAAAA,GAAc,CAACC,UAAW,MAC1BH,EAAM1B,UACPJ,EAAAA,EAAAA,KAACkC,EAAAA,EAAM,S,wGCPZ,MAAMC,EAAWC,GAAWC,UAC/B,GAAIC,aAAaC,QAAQ,UAAW,CAChC,MAAMC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,cAAiB,OAAOH,aAAaC,QAAQ,cAI/CG,EAAaN,EAAQO,GACrBC,EAAOC,KAAKC,UAAU,CAAEJ,eAE9B,IACI,MAAMK,QAAYC,EAAAA,EAAMC,KAAK,0CAAsDL,EAAMJ,GAEtE,MAAfO,EAAIG,OACJC,EAAS,CACLpC,KAAMqC,EAAAA,GACNC,QAASN,EAAIO,OAGjBH,EAAS,CACLpC,KAAMwC,EAAAA,IAGlB,CAAE,MAAMC,GACJL,EAAS,CACLpC,KAAMwC,EAAAA,IAEd,CAEJ,KAAO,CACH,IAAIE,EAAO,GAEPnB,aAAaC,QAAQ,UACrBkB,EAAOZ,KAAKa,MAAMpB,aAAaC,QAAQ,UAG3C,IAAIoB,GAAgB,EAEpBF,EAAKG,KAAIC,IACDzB,EAAQO,GAAGmB,aAAeD,EAAKzB,QAAQO,GAAGmB,aAC1CH,GAAgB,EACpB,IAGJ,MAAMI,EAAa,CACf3B,QAASA,EACT4B,MAAO,GAGPL,GACAF,EAAKQ,KAAKF,GAGdZ,EAAS,CACLpC,KAAMmD,EAAAA,GACNb,QAASI,GAEjB,GAIS/B,EAAYA,IAAMW,UAC3B,GAAIC,aAAaC,QAAQ,UAAW,CAChC,MAAMC,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,cAAiB,OAAOH,aAAaC,QAAQ,cAIrD,IACI,MAAMQ,QAAYC,EAAAA,EAAMmB,IAAI,4CAAwD3B,GAEjE,MAAfO,EAAIG,OACJC,EAAS,CACLpC,KAAMqD,EAAAA,GACNf,QAASN,EAAIO,OAGjBH,EAAS,CACLpC,KAAMsD,EAAAA,IAGlB,CAAE,MAAMb,GACJL,EAAS,CACLpC,KAAMsD,EAAAA,IAEd,CACJ,MACIlB,EAAS,CACLpC,KAAMuD,EAAAA,GAEd,EAGS3C,EAAYA,IAAMU,UAC3B,GAAIC,aAAaC,QAAQ,UAAW,CAChC,MAAMC,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,cAAiB,OAAOH,aAAaC,QAAQ,cAIrD,IACI,MAAMQ,QAAYC,EAAAA,EAAMmB,IAAI,2CAAuD3B,GAEhE,MAAfO,EAAIG,OACJC,EAAS,CACLpC,KAAMwD,EAAAA,GACNlB,QAASN,EAAIO,OAGjBH,EAAS,CACLpC,KAAMyD,EAAAA,IAGlB,CAAE,MAAMhB,GACJL,EAAS,CACLpC,KAAMyD,EAAAA,IAEd,CACJ,KAAO,CACH,IAAIC,EAAQ,EACRC,EAAgB,EAChBjB,EAAO,GAEPnB,aAAaC,QAAQ,UACrBkB,EAAOZ,KAAKa,MAAMpB,aAAaC,QAAQ,SAEvCkB,EAAKG,KAAIC,IACLY,GAASE,WAAWd,EAAKzB,QAAQwC,OAASD,WAAWd,EAAKG,OAC1DU,GAAiBC,WAAWd,EAAKzB,QAAQyC,eAAiBF,WAAWd,EAAKG,MAAM,KAIxFb,EAAS,CACLpC,KAAM+D,EAAAA,GACNzB,QAAS,CAACsB,WAAWF,EAAMM,QAAQ,IAAKJ,WAAWD,EAAcK,QAAQ,MAEjF,GAISnD,EAAiBA,IAAMS,UAChC,GAAIC,aAAaC,QAAQ,UAAW,CAChC,MAAMC,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,cAAiB,OAAOH,aAAaC,QAAQ,cAIrD,IACI,MAAMQ,QAAYC,EAAAA,EAAMmB,IAAI,gDAA4D3B,GAErE,MAAfO,EAAIG,OACJC,EAAS,CACLpC,KAAMiE,EAAAA,GACN3B,QAASN,EAAIO,OAGjBH,EAAS,CACLpC,KAAMkE,EAAAA,IAGlB,CAAE,MAAMzB,GACJL,EAAS,CACLpC,KAAMkE,EAAAA,IAEd,CACJ,KAAO,CACH,IAAIR,EAAQ,EAERnC,aAAaC,QAAQ,UACrBkC,EAAQ5B,KAAKa,MAAMpB,aAAaC,QAAQ,SAAS2C,QAGrD/B,EAAS,CACLpC,KAAMoE,EAAAA,GACN9B,QAASoB,GAEjB,GAGSW,EAAcA,CAACvB,EAAMG,IAAU3B,UACxC,GAAIC,aAAaC,QAAQ,UAAW,CAChC,MAAMC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,cAAiB,OAAOH,aAAaC,QAAQ,cAI/CG,EAAamB,EAAKzB,QAAQO,GAC1BC,EAAOC,KAAKC,UAAU,CAAEJ,aAAYsB,UAE1C,IACI,MAAMjB,QAAYC,EAAAA,EAAMqC,IAAI,6CAAyDzC,EAAMJ,GAExE,MAAfO,EAAIG,QAAmBH,EAAIO,KAAKgC,MAMhCnC,EAAS,CACLpC,KAAMwE,EAAAA,KANVpC,EAAS,CACLpC,KAAMyE,EAAAA,GACNnC,QAASN,EAAIO,MAOzB,CAAE,MAAME,GACJL,EAAS,CACLpC,KAAMwE,EAAAA,IAEd,CAEJ,KAAO,CACH,IAAI9B,EAAO,GAEPnB,aAAaC,QAAQ,UACrBkB,EAAOZ,KAAKa,MAAMpB,aAAaC,QAAQ,SAEvCkB,EAAKG,KAAI,CAAC6B,EAAWC,KACbD,EAAUrD,QAAQO,GAAGmB,aAAeD,EAAKzB,QAAQO,GAAGmB,aACpDL,EAAKiC,GAAO1B,MAAQ2B,SAAS3B,GACjC,KAIRb,EAAS,CACLpC,KAAM6E,EAAAA,GACNvC,QAASI,GAEjB,GAISoC,EAAchC,GAAQxB,UAC/B,GAAIC,aAAaC,QAAQ,UAAW,CAChC,MAAMG,EAAamB,EAAKzB,QAAQO,GAC1BC,EAAOC,KAAKC,UAAU,CAAEJ,eAGxBF,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,cAAiB,OAAOH,aAAaC,QAAQ,aAEjDe,KAAMV,GAGV,IACI,MAAMG,QAAYC,EAAAA,EAAM8C,OAAO,6CAAyDtD,GAErE,MAAfO,EAAIG,OACJC,EAAS,CACLpC,KAAMgF,EAAAA,GACN1C,QAASN,EAAIO,OAGjBH,EAAS,CACLpC,KAAMiF,EAAAA,IAGlB,CAAE,MAAMxC,GACJL,EAAS,CACLpC,KAAMiF,EAAAA,IAEd,CACJ,KAAO,CACH,IAAIvC,EAAO,GACPwC,EAAW,GAEX3D,aAAaC,QAAQ,UACrBkB,EAAOZ,KAAKa,MAAMpB,aAAaC,QAAQ,SAEvCkB,EAAKG,KAAI6B,IACDA,EAAUrD,QAAQO,GAAGmB,aAAeD,EAAKzB,QAAQO,GAAGmB,YACpDmC,EAAShC,KAAKwB,EAClB,KAIRtC,EAAS,CACLpC,KAAMmF,EAAAA,GACN7C,QAAS4C,GAEjB,E,4ECvTG,MAAMpE,EAAmBA,IAAMQ,UAClC,GAAIC,aAAaC,QAAQ,UAAW,CAChC,MAAMC,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,cAAiB,OAAOH,aAAaC,QAAQ,cAIrD,IACI,MAAMQ,QAAYC,EAAAA,EAAMmB,IAAI,yCAAqD3B,GAE9D,MAAfO,EAAIG,OACJC,EAAS,CACLpC,KAAMoF,EAAAA,GACN9C,QAASN,EAAIO,OAGjBH,EAAS,CACLpC,KAAMqF,EAAAA,IAGlB,CAAE,MAAM5C,GACJL,EAAS,CACLpC,KAAMqF,EAAAA,IAEd,CACJ,GAISC,EAAsBA,CAC/BC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,IACCvE,UACD,GAAIC,aAAaC,QAAQ,UAAW,CAChC,MAAMC,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChB,cAAiB,OAAOH,aAAaC,QAAQ,cAI/CK,EAAOC,KAAKC,UAAU,CACxBwD,iBACAC,iBACAC,OACAC,wBACAC,UACAC,QACAC,mBAGJ,IACI,MAAM7D,QAAYC,EAAAA,EAAMqC,IAAI,2CAAuDzC,EAAMJ,GAEtE,MAAfO,EAAIG,QACJC,EAAS,CACLpC,KAAM8F,EAAAA,GACNxD,QAASN,EAAIO,OAEjBH,GAAS2D,EAAAA,EAAAA,GAAS,+BAAgC,YAElD3D,EAAS,CACLpC,KAAMgG,EAAAA,KAEV5D,GAAS2D,EAAAA,EAAAA,GAAS,2BAA4B,QAEtD,CAAE,MAAMtD,GACJL,EAAS,CACLpC,KAAMgG,EAAAA,KAEV5D,GAAS2D,EAAAA,EAAAA,GAAS,2BAA4B,OAClD,CACJ,E","sources":["containers/auth/ResetPassword.js","hocs/Layout.js","redux/actions/cart.js","redux/actions/profile.js"],"sourcesContent":["import Layout from '../../hocs/Layout';\r\nimport { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password } from '../../redux/actions/auth';\r\nimport { Oval } from 'react-loader-spinner';\r\nimport { Navigate } from 'react-router';\r\n\r\nconst ResetPassword = ({\r\n  reset_password,\r\n  loading\r\n}) => {\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const [requestSent, setRequestSent] = useState(false);\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n  });\r\n\r\n  const { email } = formData;\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    reset_password(email);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  if (requestSent && !loading)\r\n    return <Navigate to='/' />;\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"min-h-full flex justify-center py-12 sm:px-6 lg:px-8\">\r\n        <div className=\"flex bg-white shadow-lg border border-gray-300 sm:rounded-lg w-full max-w-lg sm:max-w-md\">\r\n          <div className=\"w-[30%] bg-gradient-to-r from-crimson-red via-deep-rose via-dark-burgundy via-royal-purple to-midnight-blue rounded-l-lg rounded-tr-[18px] hidden sm:block\"></div>\r\n            <div className=\"w-full sm:max-w-[100%] px-4 py-6 sm:py-8\">\r\n              <h2 className=\"mt-2 text-center text-2xl sm:text-3xl font-extrabold text-gray-900\">Recuperar contrase√±a</h2>\r\n                <div className=\"mt-3 sm:mx-auto sm:w-full\">\r\n                  <div className=\"py-8 px-3\">\r\n                    <form onSubmit={e => onSubmit(e)} className=\"space-y-6\">\r\n                      <div>\r\n                        <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n                          Correo\r\n                        </label>\r\n                        <div className=\"mt-1\">\r\n                          <input\r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={e => onChange(e)}\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            required\r\n                            className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div>\r\n                        {loading ? (\r\n                          <button className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\r\n                            <Oval color=\"#fff\" width={20} height={20} ariaLabel=\"loading\" />\r\n                          </button>\r\n                        ) : (\r\n                          <button type=\"submit\" className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-midnight-blue hover:bg-purple-night focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\r\n                            Enviar al correo\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: state.Auth.loading\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  reset_password\r\n})(ResetPassword);","import { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { check_authenticated, load_user, refresh } from '../redux/actions/auth';\r\nimport {\r\n    get_items,\r\n    get_total,\r\n    get_item_total\r\n} from \"../redux/actions/cart\";\r\n\r\nimport {\r\n    get_user_profile\r\n} from \"../redux/actions/profile\";\r\n\r\nimport { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navbar from '../components/navigation/Navbar';\r\nimport Footer from '../components/navigation/Footer';\r\n\r\nconst Layout = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.refresh()\r\n        props.check_authenticated()\r\n        props.load_user()\r\n        props.get_items()\r\n        props.get_total()\r\n        props.get_item_total()\r\n        props.get_user_profile()\r\n    }, []);\r\n\r\n    return(\r\n        <div>\r\n            <Navbar/>\r\n            <ToastContainer autoClose={5000} />\r\n            {props.children}\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(null, {\r\n    check_authenticated,\r\n    load_user,\r\n    refresh,\r\n    get_items,\r\n    get_total,\r\n    get_item_total,\r\n    get_user_profile\r\n}) (Layout)","import axios from 'axios';\r\nimport {\r\n    ADD_ITEM,\r\n    GET_TOTAL,\r\n    GET_ITEM_TOTAL,\r\n    GET_ITEMS,\r\n    UPDATE_ITEM,\r\n    REMOVE_ITEM,\r\n    EMPTY_CART,\r\n    ADD_ITEM_SUCCESS,\r\n    ADD_ITEM_FAIL,\r\n    GET_TOTAL_SUCCESS,\r\n    GET_TOTAL_FAIL,\r\n    GET_ITEM_TOTAL_SUCCESS,\r\n    GET_ITEM_TOTAL_FAIL,\r\n    GET_ITEMS_SUCCESS,\r\n    GET_ITEMS_FAIL,\r\n    UPDATE_ITEM_SUCCESS,\r\n    UPDATE_ITEM_FAIL,\r\n    REMOVE_ITEM_SUCCESS,\r\n    REMOVE_ITEM_FAIL,\r\n    EMPTY_CART_SUCCESS,\r\n    EMPTY_CART_FAIL,\r\n    SYNCH_CART_SUCCESS,\r\n    SYNCH_CART_FAIL,\r\n} from './types';\r\n\r\n\r\nexport const add_item = product => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        const product_id = product.id;\r\n        const body = JSON.stringify({ product_id });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/cart/add-item`, body, config);\r\n\r\n            if (res.status === 201) {\r\n                dispatch({\r\n                    type: ADD_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: ADD_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err){\r\n            dispatch({\r\n                type: ADD_ITEM_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        let shouldAddItem = true;\r\n\r\n        cart.map(item => {\r\n            if (product.id.toString() === item.product.id.toString()) {\r\n                shouldAddItem = false;\r\n            }\r\n        });\r\n\r\n        const order_item = {\r\n            product: product,\r\n            count: 1\r\n        };\r\n\r\n        if (shouldAddItem) {\r\n            cart.push(order_item);\r\n        }\r\n\r\n        dispatch({\r\n            type: ADD_ITEM,\r\n            payload: cart\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const get_items = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/cart-items`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_ITEMS_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ITEMS_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_ITEMS_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: GET_ITEMS\r\n        });\r\n    }\r\n}\r\n\r\nexport const get_total = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-total`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_TOTAL_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_TOTAL_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_TOTAL_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let total = 0.0;\r\n        let compare_total = 0.0;\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map(item => {\r\n                total += parseFloat(item.product.price) * parseFloat(item.count);\r\n                compare_total += parseFloat(item.product.compare_price) * parseFloat(item.count);\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: GET_TOTAL,\r\n            payload: [parseFloat(total.toFixed(2)), parseFloat(compare_total.toFixed(2))]\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const get_item_total = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-item-total`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_ITEM_TOTAL_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ITEM_TOTAL_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_ITEM_TOTAL_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let total = 0;\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            total = JSON.parse(localStorage.getItem('cart')).length;\r\n        }\r\n\r\n        dispatch({\r\n            type: GET_ITEM_TOTAL,\r\n            payload: total\r\n        });\r\n    }\r\n}\r\n\r\nexport const update_item = (item, count) => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        const product_id = item.product.id;\r\n        const body = JSON.stringify({ product_id, count });\r\n\r\n        try {\r\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/cart/update-item`, body, config);\r\n\r\n            if (res.status === 200 && !res.data.error) {\r\n                dispatch({\r\n                    type: UPDATE_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: UPDATE_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: UPDATE_ITEM_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map((cart_item, index) => {\r\n                if (cart_item.product.id.toString() === item.product.id.toString()) {\r\n                    cart[index].count = parseInt(count);\r\n                }\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: UPDATE_ITEM,\r\n            payload: cart\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const remove_item = item => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const product_id = item.product.id;\r\n        const body = JSON.stringify({ product_id });\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            },\r\n            data: body\r\n        };\r\n\r\n        try {\r\n            const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/cart/remove-item`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: REMOVE_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: REMOVE_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: REMOVE_ITEM_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let cart = [];\r\n        let new_cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map(cart_item => {\r\n                if (cart_item.product.id.toString() !== item.product.id.toString()) {\r\n                    new_cart.push(cart_item);\r\n                }\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: REMOVE_ITEM,\r\n            payload: new_cart\r\n        });\r\n    }\r\n}\r\n\r\nexport const empty_cart = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/cart/empty-cart`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: EMPTY_CART_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: EMPTY_CART_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: EMPTY_CART_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: EMPTY_CART\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const synch_cart = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n        }\r\n    };\r\n\r\n    let cart_items = [];\r\n\r\n    if (localStorage.getItem('cart')) {\r\n        let cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n        cart.map(cart_item => {\r\n            const item = {};\r\n            item.product_id = cart_item.product.id;\r\n            item.count = cart_item.count;\r\n            cart_items.push(item);\r\n        });\r\n    }\r\n\r\n    const body = JSON.stringify({ cart_items });\r\n\r\n    try {\r\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/cart/synch`, body, config);\r\n\r\n        if (res.status === 201) {\r\n            dispatch({\r\n                type: SYNCH_CART_SUCCESS\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: SYNCH_CART_FAIL\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: SYNCH_CART_FAIL\r\n        });\r\n    }\r\n}","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    GET_USER_PROFILE_SUCCESS,\r\n    GET_USER_PROFILE_FAIL,\r\n    UPDATE_USER_PROFILE_SUCCESS,\r\n    UPDATE_USER_PROFILE_FAIL\r\n} from './types';\r\n\r\nexport const get_user_profile = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/profile/user`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_USER_PROFILE_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_USER_PROFILE_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_USER_PROFILE_FAIL\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const update_user_profile = (\r\n    address_line_1,\r\n    address_line_2,\r\n    city,\r\n    state_province_region,\r\n    zipcode,\r\n    phone,\r\n    country_region\r\n) => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({\r\n            address_line_1,\r\n            address_line_2,\r\n            city,\r\n            state_province_region,\r\n            zipcode,\r\n            phone,\r\n            country_region\r\n        });\r\n\r\n        try {\r\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/profile/update`, body, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: UPDATE_USER_PROFILE_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n                dispatch(setAlert('Profile updated successfully', 'green'));\r\n            } else {\r\n                dispatch({\r\n                    type: UPDATE_USER_PROFILE_FAIL\r\n                });\r\n                dispatch(setAlert('Failed to update profile', 'red'));\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: UPDATE_USER_PROFILE_FAIL\r\n            });\r\n            dispatch(setAlert('Failed to update profile', 'red'));\r\n        }\r\n    }\r\n}"],"names":["connect","state","loading","Auth","reset_password","_ref","useEffect","window","scrollTo","requestSent","setRequestSent","useState","formData","setFormData","email","_jsx","Navigate","to","Layout","children","className","_jsxs","onSubmit","e","preventDefault","htmlFor","name","value","onChange","target","type","placeholder","required","Oval","color","width","height","ariaLabel","check_authenticated","load_user","refresh","get_items","get_total","get_item_total","get_user_profile","props","Navbar","ToastContainer","autoClose","Footer","add_item","product","async","localStorage","getItem","config","headers","product_id","id","body","JSON","stringify","res","axios","post","status","dispatch","ADD_ITEM_SUCCESS","payload","data","ADD_ITEM_FAIL","err","cart","parse","shouldAddItem","map","item","toString","order_item","count","push","ADD_ITEM","get","GET_ITEMS_SUCCESS","GET_ITEMS_FAIL","GET_ITEMS","GET_TOTAL_SUCCESS","GET_TOTAL_FAIL","total","compare_total","parseFloat","price","compare_price","GET_TOTAL","toFixed","GET_ITEM_TOTAL_SUCCESS","GET_ITEM_TOTAL_FAIL","length","GET_ITEM_TOTAL","update_item","put","error","UPDATE_ITEM_FAIL","UPDATE_ITEM_SUCCESS","cart_item","index","parseInt","UPDATE_ITEM","remove_item","delete","REMOVE_ITEM_SUCCESS","REMOVE_ITEM_FAIL","new_cart","REMOVE_ITEM","GET_USER_PROFILE_SUCCESS","GET_USER_PROFILE_FAIL","update_user_profile","address_line_1","address_line_2","city","state_province_region","zipcode","phone","country_region","UPDATE_USER_PROFILE_SUCCESS","setAlert","UPDATE_USER_PROFILE_FAIL"],"sourceRoot":""}