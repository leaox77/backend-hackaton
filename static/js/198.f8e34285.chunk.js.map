{"version":3,"file":"static/js/198.f8e34285.chunk.js","mappings":"iMAIA,MAsFA,GAAeA,EAAAA,EAAAA,KAJUC,IAAK,CAC5BC,gBAAiBD,EAAME,KAAKD,mBAG9B,EAtFqBE,IAAgC,IAA/B,KAAEC,EAAI,gBAAEH,GAAiBE,EAC7C,MAAME,EAAWC,MAAMC,QAAQH,GAAQA,EAAO,GAE9C,OACEI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gCAA+BC,UAC5CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCC,UAClDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wCAAuCC,SAAC,iBAGxDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sEAAqEC,SACjFL,EAASO,OAAS,EACjBP,EAASQ,KAAKC,IAAO,IAAAC,EAAA,OACjBJ,EAAAA,EAAAA,MAAA,OAEAF,UAAU,2HAA0HC,SAAA,EAEpIF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAC7BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,8CAA6CC,SACxDI,EAAQE,UAGbR,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4DAA2DC,UACxEF,EAAAA,EAAAA,KAAA,OACES,IAAKH,EAAQI,cACbC,IAAKL,EAAQE,KACbP,UAAU,oCAIdE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+IAA8IC,SAAA,EAC3JF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sCAAqCC,SAChDI,EAAQE,QAEXR,EAAAA,EAAAA,KAAA,KAAGC,UAAU,yCAAwCC,UAC/B,QAAnBK,EAAAD,EAAQM,mBAAW,IAAAL,OAAA,EAAnBA,EAAqBH,QAAS,IAC3B,GAAGE,EAAQM,YAAYC,MAAM,EAAG,UAChCP,EAAQM,eAEdZ,EAAAA,EAAAA,KAAA,KACEC,UAAW,YACTR,EACI,4BACA,8BACHS,SAEFT,EAAkB,KAAKa,EAAQQ,QAAU,kBAE5Cd,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CACHC,GAAI,YAAYV,EAAQW,KACxBhB,UAAU,mGAAkGC,SAC7G,aArCEI,EAAQW,GAyCT,KAIRd,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qEAAoEC,SAAA,EACjFF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4CAA2CC,SAAC,+CAG1DF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BC,SAAC,wEAG1CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CACHC,GAAG,IACHf,UAAU,2GAA0GC,SACrH,kCAQP,ICrDV,GAAeX,EAAAA,EAAAA,KAJSC,IAAK,CACzB0B,iBAAkB1B,EAAM2B,SAASD,oBAGG,CACpCE,wBACJ,MAFA,EArBazB,IACN,IADO,wBAAEyB,EAAuB,iBAAEF,GACxCvB,EAOG,OALA0B,EAAAA,EAAAA,YAAU,KACNC,OAAOC,SAAS,EAAG,GACnBH,GAAyB,GAC1B,CAACA,KAGApB,EAAAA,EAAAA,KAACwB,EAAAA,EAAM,CAAAtB,UACHF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,UAC1BF,EAAAA,EAAAA,KAACyB,EAAY,CAAC7B,KAAMsB,OAEnB,G,sICHjB,MAuBA,GAAe3B,EAAAA,EAAAA,IAAQ,KAAM,CACzBmC,oBAAmB,KACnBC,UAAS,KACTC,QAAO,KACPC,UAAS,KACTC,UAAS,KACTC,eAAc,KACdC,iBACJ,KARA,EAvBgBC,KAEZZ,EAAAA,EAAAA,YAAU,KACNY,EAAML,UACNK,EAAMP,sBACNO,EAAMN,YACNM,EAAMJ,YACNI,EAAMH,YACNG,EAAMF,iBACNE,EAAMD,kBAAkB,GACzB,KAGC7B,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIF,EAAAA,EAAAA,KAACkC,EAAAA,EAAM,KACPlC,EAAAA,EAAAA,KAACmC,EAAAA,GAAc,CAACC,UAAW,MAC1BH,EAAM/B,UACPF,EAAAA,EAAAA,KAACqC,EAAAA,EAAM,S,wGCPZ,MAAMC,EAAWhC,GAAWiC,UAC/B,GAAIC,aAAaC,QAAQ,UAAW,CAChC,MAAMC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,cAAiB,OAAOH,aAAaC,QAAQ,cAI/CG,EAAatC,EAAQW,GACrB4B,EAAOC,KAAKC,UAAU,CAAEH,eAE9B,IACI,MAAMI,QAAYC,EAAAA,EAAMC,KAAK,0CAAsDL,EAAMH,GAEtE,MAAfM,EAAIG,OACJC,EAAS,CACLC,KAAMC,EAAAA,GACNC,QAASP,EAAIpD,OAGjBwD,EAAS,CACLC,KAAMG,EAAAA,IAGlB,CAAE,MAAMC,GACJL,EAAS,CACLC,KAAMG,EAAAA,IAEd,CAEJ,KAAO,CACH,IAAIE,EAAO,GAEPlB,aAAaC,QAAQ,UACrBiB,EAAOZ,KAAKa,MAAMnB,aAAaC,QAAQ,UAG3C,IAAImB,GAAgB,EAEpBF,EAAKrD,KAAIwD,IACDvD,EAAQW,GAAG6C,aAAeD,EAAKvD,QAAQW,GAAG6C,aAC1CF,GAAgB,EACpB,IAGJ,MAAMG,EAAa,CACfzD,QAASA,EACT0D,MAAO,GAGPJ,GACAF,EAAKO,KAAKF,GAGdX,EAAS,CACLC,KAAMa,EAAAA,GACNX,QAASG,GAEjB,GAIS7B,EAAYA,IAAMU,UAC3B,GAAIC,aAAaC,QAAQ,UAAW,CAChC,MAAMC,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,cAAiB,OAAOH,aAAaC,QAAQ,cAIrD,IACI,MAAMO,QAAYC,EAAAA,EAAMkB,IAAI,4CAAwDzB,GAEjE,MAAfM,EAAIG,OACJC,EAAS,CACLC,KAAMe,EAAAA,GACNb,QAASP,EAAIpD,OAGjBwD,EAAS,CACLC,KAAMgB,EAAAA,IAGlB,CAAE,MAAMZ,GACJL,EAAS,CACLC,KAAMgB,EAAAA,IAEd,CACJ,MACIjB,EAAS,CACLC,KAAMiB,EAAAA,GAEd,EAGSxC,EAAYA,IAAMS,UAC3B,GAAIC,aAAaC,QAAQ,UAAW,CAChC,MAAMC,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,cAAiB,OAAOH,aAAaC,QAAQ,cAIrD,IACI,MAAMO,QAAYC,EAAAA,EAAMkB,IAAI,2CAAuDzB,GAEhE,MAAfM,EAAIG,OACJC,EAAS,CACLC,KAAMkB,EAAAA,GACNhB,QAASP,EAAIpD,OAGjBwD,EAAS,CACLC,KAAMmB,EAAAA,IAGlB,CAAE,MAAMf,GACJL,EAAS,CACLC,KAAMmB,EAAAA,IAEd,CACJ,KAAO,CACH,IAAIC,EAAQ,EACRC,EAAgB,EAChBhB,EAAO,GAEPlB,aAAaC,QAAQ,UACrBiB,EAAOZ,KAAKa,MAAMnB,aAAaC,QAAQ,SAEvCiB,EAAKrD,KAAIwD,IACLY,GAASE,WAAWd,EAAKvD,QAAQQ,OAAS6D,WAAWd,EAAKG,OAC1DU,GAAiBC,WAAWd,EAAKvD,QAAQsE,eAAiBD,WAAWd,EAAKG,MAAM,KAIxFZ,EAAS,CACLC,KAAMwB,EAAAA,GACNtB,QAAS,CAACoB,WAAWF,EAAMK,QAAQ,IAAKH,WAAWD,EAAcI,QAAQ,MAEjF,GAIS/C,EAAiBA,IAAMQ,UAChC,GAAIC,aAAaC,QAAQ,UAAW,CAChC,MAAMC,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,cAAiB,OAAOH,aAAaC,QAAQ,cAIrD,IACI,MAAMO,QAAYC,EAAAA,EAAMkB,IAAI,gDAA4DzB,GAErE,MAAfM,EAAIG,OACJC,EAAS,CACLC,KAAM0B,EAAAA,GACNxB,QAASP,EAAIpD,OAGjBwD,EAAS,CACLC,KAAM2B,EAAAA,IAGlB,CAAE,MAAMvB,GACJL,EAAS,CACLC,KAAM2B,EAAAA,IAEd,CACJ,KAAO,CACH,IAAIP,EAAQ,EAERjC,aAAaC,QAAQ,UACrBgC,EAAQ3B,KAAKa,MAAMnB,aAAaC,QAAQ,SAASrC,QAGrDgD,EAAS,CACLC,KAAM4B,EAAAA,GACN1B,QAASkB,GAEjB,GAGSS,EAAcA,CAACrB,EAAMG,IAAUzB,UACxC,GAAIC,aAAaC,QAAQ,UAAW,CAChC,MAAMC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,cAAiB,OAAOH,aAAaC,QAAQ,cAI/CG,EAAaiB,EAAKvD,QAAQW,GAC1B4B,EAAOC,KAAKC,UAAU,CAAEH,aAAYoB,UAE1C,IACI,MAAMhB,QAAYC,EAAAA,EAAMkC,IAAI,6CAAyDtC,EAAMH,GAExE,MAAfM,EAAIG,QAAmBH,EAAIpD,KAAKwF,MAMhChC,EAAS,CACLC,KAAMgC,EAAAA,KANVjC,EAAS,CACLC,KAAMiC,EAAAA,GACN/B,QAASP,EAAIpD,MAOzB,CAAE,MAAM6D,GACJL,EAAS,CACLC,KAAMgC,EAAAA,IAEd,CAEJ,KAAO,CACH,IAAI3B,EAAO,GAEPlB,aAAaC,QAAQ,UACrBiB,EAAOZ,KAAKa,MAAMnB,aAAaC,QAAQ,SAEvCiB,EAAKrD,KAAI,CAACkF,EAAWC,KACbD,EAAUjF,QAAQW,GAAG6C,aAAeD,EAAKvD,QAAQW,GAAG6C,aACpDJ,EAAK8B,GAAOxB,MAAQyB,SAASzB,GACjC,KAIRZ,EAAS,CACLC,KAAMqC,EAAAA,GACNnC,QAASG,GAEjB,GAISiC,EAAc9B,GAAQtB,UAC/B,GAAIC,aAAaC,QAAQ,UAAW,CAChC,MAAMG,EAAaiB,EAAKvD,QAAQW,GAC1B4B,EAAOC,KAAKC,UAAU,CAAEH,eAGxBF,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,cAAiB,OAAOH,aAAaC,QAAQ,aAEjD7C,KAAMiD,GAGV,IACI,MAAMG,QAAYC,EAAAA,EAAM2C,OAAO,6CAAyDlD,GAErE,MAAfM,EAAIG,OACJC,EAAS,CACLC,KAAMwC,EAAAA,GACNtC,QAASP,EAAIpD,OAGjBwD,EAAS,CACLC,KAAMyC,EAAAA,IAGlB,CAAE,MAAMrC,GACJL,EAAS,CACLC,KAAMyC,EAAAA,IAEd,CACJ,KAAO,CACH,IAAIpC,EAAO,GACPqC,EAAW,GAEXvD,aAAaC,QAAQ,UACrBiB,EAAOZ,KAAKa,MAAMnB,aAAaC,QAAQ,SAEvCiB,EAAKrD,KAAIkF,IACDA,EAAUjF,QAAQW,GAAG6C,aAAeD,EAAKvD,QAAQW,GAAG6C,YACpDiC,EAAS9B,KAAKsB,EAClB,KAIRnC,EAAS,CACLC,KAAM2C,EAAAA,GACNzC,QAASwC,GAEjB,E,4ECvTG,MAAM/D,EAAmBA,IAAMO,UAClC,GAAIC,aAAaC,QAAQ,UAAW,CAChC,MAAMC,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,cAAiB,OAAOH,aAAaC,QAAQ,cAIrD,IACI,MAAMO,QAAYC,EAAAA,EAAMkB,IAAI,yCAAqDzB,GAE9D,MAAfM,EAAIG,OACJC,EAAS,CACLC,KAAM4C,EAAAA,GACN1C,QAASP,EAAIpD,OAGjBwD,EAAS,CACLC,KAAM6C,EAAAA,IAGlB,CAAE,MAAMzC,GACJL,EAAS,CACLC,KAAM6C,EAAAA,IAEd,CACJ,GAISC,EAAsBA,CAC/BC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,IACCnE,UACD,GAAIC,aAAaC,QAAQ,UAAW,CAChC,MAAMC,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChB,cAAiB,OAAOH,aAAaC,QAAQ,cAI/CI,EAAOC,KAAKC,UAAU,CACxBqD,iBACAC,iBACAC,OACAC,wBACAC,UACAC,QACAC,mBAGJ,IACI,MAAM1D,QAAYC,EAAAA,EAAMkC,IAAI,2CAAuDtC,EAAMH,GAEtE,MAAfM,EAAIG,QACJC,EAAS,CACLC,KAAMsD,EAAAA,GACNpD,QAASP,EAAIpD,OAEjBwD,GAASwD,EAAAA,EAAAA,GAAS,+BAAgC,YAElDxD,EAAS,CACLC,KAAMwD,EAAAA,KAEVzD,GAASwD,EAAAA,EAAAA,GAAS,2BAA4B,QAEtD,CAAE,MAAMnD,GACJL,EAAS,CACLC,KAAMwD,EAAAA,KAEVzD,GAASwD,EAAAA,EAAAA,GAAS,2BAA4B,OAClD,CACJ,E","sources":["containers/pages/NewsProducts.jsx","containers/News.jsx","hocs/Layout.js","redux/actions/cart.js","redux/actions/profile.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst NewsProducts = ({ data, isAuthenticated }) => {\r\n  const products = Array.isArray(data) ? data : [];\r\n\r\n  return (\r\n    <div className=\"bg-gray-50 min-h-screen py-16\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"text-center max-w-2xl mx-auto mb-12\">\r\n          <h1 className=\"text-5xl font-extrabold text-gray-900\">Novedades</h1>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-2 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8\">\r\n          {products.length > 0 ? (\r\n            products.map((product) => (\r\n                <div\r\n                key={product.id}\r\n                className=\"relative group bg-white rounded-lg shadow-xl overflow-hidden transform transition-transform duration-300 hover:scale-105\"\r\n              >\r\n                <div className=\"px-4 py-2 mt-2\">\r\n                  <h2 className=\"text-lg font-bold text-gray-800 text-center\">\r\n                    {product.name}\r\n                  </h2>\r\n                </div>\r\n                <div className=\"relative w-full h-52 p-4 flex items-center justify-center\">\r\n                  <img\r\n                    src={product.get_thumbnail}\r\n                    alt={product.name}\r\n                    className=\"w-full h-full object-contain\"\r\n                  />\r\n                </div>\r\n              \r\n                <div className=\"absolute inset-0 flex flex-col items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300 bg-gray-100 p-4\">\r\n                  <h2 className=\"text-xl font-semibold text-gray-800\">\r\n                    {product.name}\r\n                  </h2>\r\n                  <p className=\"text-sm text-gray-600 mt-2 text-center\">\r\n                    {product.description?.length > 100\r\n                      ? `${product.description.slice(0, 100)}...`\r\n                      : product.description}\r\n                  </p>\r\n                  <p\r\n                    className={`text-sm ${\r\n                      isAuthenticated\r\n                        ? \"font-medium text-gray-900\"\r\n                        : \"text-red-500 font-semibold\"\r\n                    }`}\r\n                  >\r\n                    {isAuthenticated ? `Bs${product.price}` : \"No permitido\"}\r\n                  </p>\r\n                  <Link\r\n                    to={`/product/${product.id}`}\r\n                    className=\"mt-4 px-4 py-2 bg-midnight-blue text-white rounded-md shadow-md hover:bg-purple-night transition\"\r\n                  >\r\n                    Ver\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n              \r\n            ))\r\n          ) : (\r\n            <div className=\"col-span-4 text-center py-16 px-4 bg-gray-200 rounded-lg shadow-lg\">\r\n              <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">\r\n                Actualmente no hay productos disponibles.\r\n              </h2>\r\n              <p className=\"text-lg text-gray-600 mb-6\">\r\n                Estamos trabajando para traer nuevos productos. ¡Vuelve pronto!\r\n              </p>\r\n              <div className=\"mt-4\">\r\n                <Link\r\n                  to=\"/\"\r\n                  className=\"inline-block px-6 py-3 bg-midnight-blue text-white rounded-md shadow-lg hover:bg-purple-night transition\"\r\n                >\r\n                  Regresar al inicio\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.Auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(NewsProducts);","import Layout from \"../hocs/Layout\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    get_products_by_arrival\r\n} from '../redux/actions/products';\r\nimport { useEffect } from \"react\";\r\nimport NewsProducts from \"./pages/NewsProducts\";\r\n\r\nconst Home = ({ get_products_by_arrival, products_arrival\r\n}) => {\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        get_products_by_arrival();\r\n    }, [get_products_by_arrival]);\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"text-blue-500\">\r\n                <NewsProducts data={products_arrival} />\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    products_arrival: state.Products.products_arrival\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    get_products_by_arrival\r\n})(Home);","import { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { check_authenticated, load_user, refresh } from '../redux/actions/auth';\r\nimport {\r\n    get_items,\r\n    get_total,\r\n    get_item_total\r\n} from \"../redux/actions/cart\";\r\n\r\nimport {\r\n    get_user_profile\r\n} from \"../redux/actions/profile\";\r\n\r\nimport { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navbar from '../components/navigation/Navbar';\r\nimport Footer from '../components/navigation/Footer';\r\n\r\nconst Layout = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.refresh()\r\n        props.check_authenticated()\r\n        props.load_user()\r\n        props.get_items()\r\n        props.get_total()\r\n        props.get_item_total()\r\n        props.get_user_profile()\r\n    }, []);\r\n\r\n    return(\r\n        <div>\r\n            <Navbar/>\r\n            <ToastContainer autoClose={5000} />\r\n            {props.children}\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(null, {\r\n    check_authenticated,\r\n    load_user,\r\n    refresh,\r\n    get_items,\r\n    get_total,\r\n    get_item_total,\r\n    get_user_profile\r\n}) (Layout)","import axios from 'axios';\r\nimport {\r\n    ADD_ITEM,\r\n    GET_TOTAL,\r\n    GET_ITEM_TOTAL,\r\n    GET_ITEMS,\r\n    UPDATE_ITEM,\r\n    REMOVE_ITEM,\r\n    EMPTY_CART,\r\n    ADD_ITEM_SUCCESS,\r\n    ADD_ITEM_FAIL,\r\n    GET_TOTAL_SUCCESS,\r\n    GET_TOTAL_FAIL,\r\n    GET_ITEM_TOTAL_SUCCESS,\r\n    GET_ITEM_TOTAL_FAIL,\r\n    GET_ITEMS_SUCCESS,\r\n    GET_ITEMS_FAIL,\r\n    UPDATE_ITEM_SUCCESS,\r\n    UPDATE_ITEM_FAIL,\r\n    REMOVE_ITEM_SUCCESS,\r\n    REMOVE_ITEM_FAIL,\r\n    EMPTY_CART_SUCCESS,\r\n    EMPTY_CART_FAIL,\r\n    SYNCH_CART_SUCCESS,\r\n    SYNCH_CART_FAIL,\r\n} from './types';\r\n\r\n\r\nexport const add_item = product => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        const product_id = product.id;\r\n        const body = JSON.stringify({ product_id });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/cart/add-item`, body, config);\r\n\r\n            if (res.status === 201) {\r\n                dispatch({\r\n                    type: ADD_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: ADD_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err){\r\n            dispatch({\r\n                type: ADD_ITEM_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        let shouldAddItem = true;\r\n\r\n        cart.map(item => {\r\n            if (product.id.toString() === item.product.id.toString()) {\r\n                shouldAddItem = false;\r\n            }\r\n        });\r\n\r\n        const order_item = {\r\n            product: product,\r\n            count: 1\r\n        };\r\n\r\n        if (shouldAddItem) {\r\n            cart.push(order_item);\r\n        }\r\n\r\n        dispatch({\r\n            type: ADD_ITEM,\r\n            payload: cart\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const get_items = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/cart-items`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_ITEMS_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ITEMS_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_ITEMS_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: GET_ITEMS\r\n        });\r\n    }\r\n}\r\n\r\nexport const get_total = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-total`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_TOTAL_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_TOTAL_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_TOTAL_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let total = 0.0;\r\n        let compare_total = 0.0;\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map(item => {\r\n                total += parseFloat(item.product.price) * parseFloat(item.count);\r\n                compare_total += parseFloat(item.product.compare_price) * parseFloat(item.count);\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: GET_TOTAL,\r\n            payload: [parseFloat(total.toFixed(2)), parseFloat(compare_total.toFixed(2))]\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const get_item_total = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-item-total`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_ITEM_TOTAL_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ITEM_TOTAL_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_ITEM_TOTAL_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let total = 0;\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            total = JSON.parse(localStorage.getItem('cart')).length;\r\n        }\r\n\r\n        dispatch({\r\n            type: GET_ITEM_TOTAL,\r\n            payload: total\r\n        });\r\n    }\r\n}\r\n\r\nexport const update_item = (item, count) => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        const product_id = item.product.id;\r\n        const body = JSON.stringify({ product_id, count });\r\n\r\n        try {\r\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/cart/update-item`, body, config);\r\n\r\n            if (res.status === 200 && !res.data.error) {\r\n                dispatch({\r\n                    type: UPDATE_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: UPDATE_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: UPDATE_ITEM_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map((cart_item, index) => {\r\n                if (cart_item.product.id.toString() === item.product.id.toString()) {\r\n                    cart[index].count = parseInt(count);\r\n                }\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: UPDATE_ITEM,\r\n            payload: cart\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const remove_item = item => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const product_id = item.product.id;\r\n        const body = JSON.stringify({ product_id });\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            },\r\n            data: body\r\n        };\r\n\r\n        try {\r\n            const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/cart/remove-item`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: REMOVE_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: REMOVE_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: REMOVE_ITEM_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let cart = [];\r\n        let new_cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map(cart_item => {\r\n                if (cart_item.product.id.toString() !== item.product.id.toString()) {\r\n                    new_cart.push(cart_item);\r\n                }\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: REMOVE_ITEM,\r\n            payload: new_cart\r\n        });\r\n    }\r\n}\r\n\r\nexport const empty_cart = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/cart/empty-cart`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: EMPTY_CART_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: EMPTY_CART_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: EMPTY_CART_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: EMPTY_CART\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const synch_cart = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n        }\r\n    };\r\n\r\n    let cart_items = [];\r\n\r\n    if (localStorage.getItem('cart')) {\r\n        let cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n        cart.map(cart_item => {\r\n            const item = {};\r\n            item.product_id = cart_item.product.id;\r\n            item.count = cart_item.count;\r\n            cart_items.push(item);\r\n        });\r\n    }\r\n\r\n    const body = JSON.stringify({ cart_items });\r\n\r\n    try {\r\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/cart/synch`, body, config);\r\n\r\n        if (res.status === 201) {\r\n            dispatch({\r\n                type: SYNCH_CART_SUCCESS\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: SYNCH_CART_FAIL\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: SYNCH_CART_FAIL\r\n        });\r\n    }\r\n}","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    GET_USER_PROFILE_SUCCESS,\r\n    GET_USER_PROFILE_FAIL,\r\n    UPDATE_USER_PROFILE_SUCCESS,\r\n    UPDATE_USER_PROFILE_FAIL\r\n} from './types';\r\n\r\nexport const get_user_profile = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/profile/user`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_USER_PROFILE_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_USER_PROFILE_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_USER_PROFILE_FAIL\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const update_user_profile = (\r\n    address_line_1,\r\n    address_line_2,\r\n    city,\r\n    state_province_region,\r\n    zipcode,\r\n    phone,\r\n    country_region\r\n) => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({\r\n            address_line_1,\r\n            address_line_2,\r\n            city,\r\n            state_province_region,\r\n            zipcode,\r\n            phone,\r\n            country_region\r\n        });\r\n\r\n        try {\r\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/profile/update`, body, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: UPDATE_USER_PROFILE_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n                dispatch(setAlert('Profile updated successfully', 'green'));\r\n            } else {\r\n                dispatch({\r\n                    type: UPDATE_USER_PROFILE_FAIL\r\n                });\r\n                dispatch(setAlert('Failed to update profile', 'red'));\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: UPDATE_USER_PROFILE_FAIL\r\n            });\r\n            dispatch(setAlert('Failed to update profile', 'red'));\r\n        }\r\n    }\r\n}"],"names":["connect","state","isAuthenticated","Auth","_ref","data","products","Array","isArray","_jsx","className","children","_jsxs","length","map","product","_product$description","name","src","get_thumbnail","alt","description","slice","price","Link","to","id","products_arrival","Products","get_products_by_arrival","useEffect","window","scrollTo","Layout","NewsProducts","check_authenticated","load_user","refresh","get_items","get_total","get_item_total","get_user_profile","props","Navbar","ToastContainer","autoClose","Footer","add_item","async","localStorage","getItem","config","headers","product_id","body","JSON","stringify","res","axios","post","status","dispatch","type","ADD_ITEM_SUCCESS","payload","ADD_ITEM_FAIL","err","cart","parse","shouldAddItem","item","toString","order_item","count","push","ADD_ITEM","get","GET_ITEMS_SUCCESS","GET_ITEMS_FAIL","GET_ITEMS","GET_TOTAL_SUCCESS","GET_TOTAL_FAIL","total","compare_total","parseFloat","compare_price","GET_TOTAL","toFixed","GET_ITEM_TOTAL_SUCCESS","GET_ITEM_TOTAL_FAIL","GET_ITEM_TOTAL","update_item","put","error","UPDATE_ITEM_FAIL","UPDATE_ITEM_SUCCESS","cart_item","index","parseInt","UPDATE_ITEM","remove_item","delete","REMOVE_ITEM_SUCCESS","REMOVE_ITEM_FAIL","new_cart","REMOVE_ITEM","GET_USER_PROFILE_SUCCESS","GET_USER_PROFILE_FAIL","update_user_profile","address_line_1","address_line_2","city","state_province_region","zipcode","phone","country_region","UPDATE_USER_PROFILE_SUCCESS","setAlert","UPDATE_USER_PROFILE_FAIL"],"sourceRoot":""}