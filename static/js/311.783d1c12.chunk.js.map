{"version":3,"file":"static/js/311.783d1c12.chunk.js","mappings":"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","sources":["containers/auth/Activate.js","hocs/Layout.js","redux/actions/cart.js","redux/actions/profile.js"],"sourcesContent":["import Layout from '../../hocs/Layout';\r\nimport { useParams } from 'react-router';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { activate } from '../../redux/actions/auth';\r\nimport { Navigate } from 'react-router';\r\nimport { Oval } from 'react-loader-spinner'; \r\n\r\nconst Activate = ({ activate, loading }) => {\r\n    const params = useParams();\r\n    const [activated, setActivated] = useState(false);\r\n\r\n    const activate_account = () => {\r\n        const uid = params.uid;\r\n        const token = params.token;\r\n        activate(uid, token);\r\n        setActivated(true);\r\n    };\r\n\r\n    if (activated && !loading) {\r\n        return <Navigate to='/' />;\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <div className='max-w-7xl mx-auto px-4 sm:px-6 lg:px-8'>\r\n                <div className='max-w-3xl mx-auto'>\r\n                    {loading ? \r\n                        <button\r\n                            className=\"inline-flex mt-12 items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-midnight-blue hover:bg-purple-night focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                        >\r\n                            <Oval\r\n                                height={20}\r\n                                width={20}\r\n                                color=\"#fff\"\r\n                                ariaLabel=\"loading\"\r\n                            />\r\n                        </button> :\r\n                        <button\r\n                            onClick={activate_account}\r\n                            className=\"inline-flex mt-12 items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-midnight-blue hover:bg-purple-night focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                        >\r\n                            Activar cuenta\r\n                        </button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.Auth.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { activate })(Activate);","import { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { check_authenticated, load_user, refresh } from '../redux/actions/auth';\r\nimport {\r\n    get_items,\r\n    get_total,\r\n    get_item_total\r\n} from \"../redux/actions/cart\";\r\n\r\nimport {\r\n    get_user_profile\r\n} from \"../redux/actions/profile\";\r\n\r\nimport { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navbar from '../components/navigation/Navbar';\r\nimport Footer from '../components/navigation/Footer';\r\n\r\nconst Layout = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.refresh()\r\n        props.check_authenticated()\r\n        props.load_user()\r\n        props.get_items()\r\n        props.get_total()\r\n        props.get_item_total()\r\n        props.get_user_profile()\r\n    }, []);\r\n\r\n    return(\r\n        <div>\r\n            <Navbar/>\r\n            <ToastContainer autoClose={5000} />\r\n            {props.children}\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(null, {\r\n    check_authenticated,\r\n    load_user,\r\n    refresh,\r\n    get_items,\r\n    get_total,\r\n    get_item_total,\r\n    get_user_profile\r\n}) (Layout)","import axios from 'axios';\r\nimport {\r\n    ADD_ITEM,\r\n    GET_TOTAL,\r\n    GET_ITEM_TOTAL,\r\n    GET_ITEMS,\r\n    UPDATE_ITEM,\r\n    REMOVE_ITEM,\r\n    EMPTY_CART,\r\n    ADD_ITEM_SUCCESS,\r\n    ADD_ITEM_FAIL,\r\n    GET_TOTAL_SUCCESS,\r\n    GET_TOTAL_FAIL,\r\n    GET_ITEM_TOTAL_SUCCESS,\r\n    GET_ITEM_TOTAL_FAIL,\r\n    GET_ITEMS_SUCCESS,\r\n    GET_ITEMS_FAIL,\r\n    UPDATE_ITEM_SUCCESS,\r\n    UPDATE_ITEM_FAIL,\r\n    REMOVE_ITEM_SUCCESS,\r\n    REMOVE_ITEM_FAIL,\r\n    EMPTY_CART_SUCCESS,\r\n    EMPTY_CART_FAIL,\r\n    SYNCH_CART_SUCCESS,\r\n    SYNCH_CART_FAIL,\r\n} from './types';\r\n\r\n\r\nexport const add_item = product => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        const product_id = product.id;\r\n        const body = JSON.stringify({ product_id });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/cart/add-item`, body, config);\r\n\r\n            if (res.status === 201) {\r\n                dispatch({\r\n                    type: ADD_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: ADD_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err){\r\n            dispatch({\r\n                type: ADD_ITEM_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        let shouldAddItem = true;\r\n\r\n        cart.map(item => {\r\n            if (product.id.toString() === item.product.id.toString()) {\r\n                shouldAddItem = false;\r\n            }\r\n        });\r\n\r\n        const order_item = {\r\n            product: product,\r\n            count: 1\r\n        };\r\n\r\n        if (shouldAddItem) {\r\n            cart.push(order_item);\r\n        }\r\n\r\n        dispatch({\r\n            type: ADD_ITEM,\r\n            payload: cart\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const get_items = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/cart-items`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_ITEMS_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ITEMS_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_ITEMS_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: GET_ITEMS\r\n        });\r\n    }\r\n}\r\n\r\nexport const get_total = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-total`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_TOTAL_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_TOTAL_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_TOTAL_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let total = 0.0;\r\n        let compare_total = 0.0;\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map(item => {\r\n                total += parseFloat(item.product.price) * parseFloat(item.count);\r\n                compare_total += parseFloat(item.product.compare_price) * parseFloat(item.count);\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: GET_TOTAL,\r\n            payload: [parseFloat(total.toFixed(2)), parseFloat(compare_total.toFixed(2))]\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const get_item_total = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-item-total`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_ITEM_TOTAL_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ITEM_TOTAL_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_ITEM_TOTAL_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let total = 0;\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            total = JSON.parse(localStorage.getItem('cart')).length;\r\n        }\r\n\r\n        dispatch({\r\n            type: GET_ITEM_TOTAL,\r\n            payload: total\r\n        });\r\n    }\r\n}\r\n\r\nexport const update_item = (item, count) => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        const product_id = item.product.id;\r\n        const body = JSON.stringify({ product_id, count });\r\n\r\n        try {\r\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/cart/update-item`, body, config);\r\n\r\n            if (res.status === 200 && !res.data.error) {\r\n                dispatch({\r\n                    type: UPDATE_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: UPDATE_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: UPDATE_ITEM_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map((cart_item, index) => {\r\n                if (cart_item.product.id.toString() === item.product.id.toString()) {\r\n                    cart[index].count = parseInt(count);\r\n                }\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: UPDATE_ITEM,\r\n            payload: cart\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const remove_item = item => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const product_id = item.product.id;\r\n        const body = JSON.stringify({ product_id });\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            },\r\n            data: body\r\n        };\r\n\r\n        try {\r\n            const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/cart/remove-item`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: REMOVE_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: REMOVE_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: REMOVE_ITEM_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let cart = [];\r\n        let new_cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map(cart_item => {\r\n                if (cart_item.product.id.toString() !== item.product.id.toString()) {\r\n                    new_cart.push(cart_item);\r\n                }\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: REMOVE_ITEM,\r\n            payload: new_cart\r\n        });\r\n    }\r\n}\r\n\r\nexport const empty_cart = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/cart/empty-cart`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: EMPTY_CART_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: EMPTY_CART_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: EMPTY_CART_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: EMPTY_CART\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const synch_cart = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n        }\r\n    };\r\n\r\n    let cart_items = [];\r\n\r\n    if (localStorage.getItem('cart')) {\r\n        let cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n        cart.map(cart_item => {\r\n            const item = {};\r\n            item.product_id = cart_item.product.id;\r\n            item.count = cart_item.count;\r\n            cart_items.push(item);\r\n        });\r\n    }\r\n\r\n    const body = JSON.stringify({ cart_items });\r\n\r\n    try {\r\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/cart/synch`, body, config);\r\n\r\n        if (res.status === 201) {\r\n            dispatch({\r\n                type: SYNCH_CART_SUCCESS\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: SYNCH_CART_FAIL\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: SYNCH_CART_FAIL\r\n        });\r\n    }\r\n}","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    GET_USER_PROFILE_SUCCESS,\r\n    GET_USER_PROFILE_FAIL,\r\n    UPDATE_USER_PROFILE_SUCCESS,\r\n    UPDATE_USER_PROFILE_FAIL\r\n} from './types';\r\n\r\nexport const get_user_profile = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/profile/user`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_USER_PROFILE_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_USER_PROFILE_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_USER_PROFILE_FAIL\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const update_user_profile = (\r\n    address_line_1,\r\n    address_line_2,\r\n    city,\r\n    state_province_region,\r\n    zipcode,\r\n    phone,\r\n    country_region\r\n) => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({\r\n            address_line_1,\r\n            address_line_2,\r\n            city,\r\n            state_province_region,\r\n            zipcode,\r\n            phone,\r\n            country_region\r\n        });\r\n\r\n        try {\r\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/profile/update`, body, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: UPDATE_USER_PROFILE_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n                dispatch(setAlert('Profile updated successfully', 'green'));\r\n            } else {\r\n                dispatch({\r\n                    type: UPDATE_USER_PROFILE_FAIL\r\n                });\r\n                dispatch(setAlert('Failed to update profile', 'red'));\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: UPDATE_USER_PROFILE_FAIL\r\n            });\r\n            dispatch(setAlert('Failed to update profile', 'red'));\r\n        }\r\n    }\r\n}"],"names":["connect","state","loading","Auth","activate","_ref","params","useParams","activated","setActivated","useState","_jsx","Navigate","to","Layout","children","className","Oval","height","width","color","ariaLabel","onClick","activate_account","uid","token","check_authenticated","load_user","refresh","get_items","get_total","get_item_total","get_user_profile","props","useEffect","_jsxs","Navbar","ToastContainer","autoClose","Footer","add_item","product","async","localStorage","getItem","config","headers","product_id","id","body","JSON","stringify","res","axios","post","status","dispatch","type","ADD_ITEM_SUCCESS","payload","data","ADD_ITEM_FAIL","err","cart","parse","shouldAddItem","map","item","toString","order_item","count","push","ADD_ITEM","get","GET_ITEMS_SUCCESS","GET_ITEMS_FAIL","GET_ITEMS","GET_TOTAL_SUCCESS","GET_TOTAL_FAIL","total","compare_total","parseFloat","price","compare_price","GET_TOTAL","toFixed","GET_ITEM_TOTAL_SUCCESS","GET_ITEM_TOTAL_FAIL","length","GET_ITEM_TOTAL","update_item","put","error","UPDATE_ITEM_FAIL","UPDATE_ITEM_SUCCESS","cart_item","index","parseInt","UPDATE_ITEM","remove_item","delete","REMOVE_ITEM_SUCCESS","REMOVE_ITEM_FAIL","new_cart","REMOVE_ITEM","GET_USER_PROFILE_SUCCESS","GET_USER_PROFILE_FAIL","update_user_profile","address_line_1","address_line_2","city","state_province_region","zipcode","phone","country_region","UPDATE_USER_PROFILE_SUCCESS","setAlert","UPDATE_USER_PROFILE_FAIL"],"sourceRoot":""}