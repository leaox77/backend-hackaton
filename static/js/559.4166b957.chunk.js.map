{"version":3,"file":"static/js/559.4166b957.chunk.js","mappings":"qMA4FA,MAKA,GAAeA,EAAAA,EAAAA,KALUC,IAAK,CAC1BC,qBAAsBD,EAAME,GAAGD,qBAC/BE,wBAAyBH,EAAME,GAAGC,2BAGE,CACpCC,yBCpEqCC,GAAYC,UACjD,MAEMC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,cAAiB,UANXC,aAAaC,QAAQ,cAU7BC,EAAOC,KAAKC,UAAU,CAAER,YAE9B,IACI,MAAMS,QAAYC,EAAAA,EAAMC,KACpB,mDACAL,EACAJ,GAGJU,EAAS,CACLC,KAAMC,EAAAA,GACNC,QAASN,EAAIO,KAAKC,YAE1B,CAAE,MAAOC,GAAQ,IAADC,EACZC,QAAQF,MAAM,4BAAsC,QAAhBC,EAAED,EAAMG,gBAAQ,IAAAF,OAAA,EAAdA,EAAgBH,MACtDJ,EAAS,CACLC,KAAMS,EAAAA,IAEd,GDwCAC,sBCzFiCA,IAAMtB,UACvC,IACI,MAAMQ,QAAYC,EAAAA,EAAMc,IAAI,iDAA6D,CACrFrB,QAAS,CACLsB,OAAQ,sBAIhBb,EAAS,CACLC,KAAMa,EAAAA,GACNX,QAASN,EAAIO,KAAKW,SAE1B,CAAE,MAAOT,GACLN,EAAS,CACLC,KAAMe,EAAAA,IAEd,IDuEJ,EA5FA,SAA0BC,GAKtB,IALuB,qBACvBjC,EAAoB,wBACpBE,EAAuB,yBACvBC,EAAwB,sBACxBwB,GACHM,EACG,MAAO7B,EAAS8B,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,GAkC3C,OAhCAX,QAAQc,IAAI,qDAA4CtC,IAaxDuC,EAAAA,EAAAA,YAAU,KACN,GAA6B,OAAzBvC,EAA+B,CAC/BwB,QAAQc,IAAI,8DACZD,GAAa,GACb,MAAMG,EAAQC,YAAW,KACrBJ,GAAa,GACbb,QAAQc,IAAI,0CAAkC,GAC/C,KACH,MAAO,IAAMI,aAAaF,EAC9B,IACD,CAACxC,KAUA2C,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CAAAC,UACZC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2DAA0DF,SAAA,EACrEF,EAAAA,EAAAA,KAAA,MAAII,UAAU,8BAA6BF,SAAC,gCAE5CF,EAAAA,EAAAA,KAAA,UACIK,QApCIC,KAChBtB,GAAuB,EAoCXoB,UAAU,yEAAwEF,SACrF,oBAIA3C,IACGyC,EAAAA,EAAAA,KAAA,KAAGI,UAAU,sBAAqBF,SAAE3C,KAGxCyC,EAAAA,EAAAA,KAAA,YACIO,MAAO9C,EACP+C,SAAWC,GAAMlB,EAAWkB,EAAEC,OAAOH,OACrCI,YAAY,2BACZP,UAAU,oDACVQ,KAAM,KAGVZ,EAAAA,EAAAA,KAAA,UACIK,QAnDMQ,KACK,KAAnBpD,EAAQqD,SACRjC,QAAQc,IAAI,kDAA2ClC,GACvDD,EAAyBC,GAC7B,EAgDY2C,UAAU,gEAA+DF,SAC5E,wBAKAT,GAAapC,IACV8C,EAAAA,EAAAA,MAAA,OACIC,UAAW,6DAzCJW,EA0CH1D,EAzCF,aAAd0D,EAAiC,eACnB,aAAdA,EAAiC,gBACnB,aAAdA,EAAiC,aAC9B,eAuCab,SAAA,CACP,uCACwC7C,EAAqB2D,sBA7CnDD,KAmD/B,G,sIExEA,MAuBA,GAAe5D,EAAAA,EAAAA,IAAQ,KAAM,CACzB8D,oBAAmB,KACnBC,UAAS,KACTC,QAAO,KACPC,UAAS,KACTC,UAAS,KACTC,eAAc,KACdC,iBACJ,KARA,EAvBgBC,KAEZ5B,EAAAA,EAAAA,YAAU,KACN4B,EAAML,UACNK,EAAMP,sBACNO,EAAMN,YACNM,EAAMJ,YACNI,EAAMH,YACNG,EAAMF,iBACNE,EAAMD,kBAAkB,GACzB,KAGCpB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIF,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,KACPzB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAc,CAACC,UAAW,MAC1BH,EAAMtB,UACPF,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,S,wGCPZ,MAAMC,EAAWC,GAAWpE,UAC/B,GAAIG,aAAaC,QAAQ,UAAW,CAChC,MAAMH,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,cAAiB,OAAOC,aAAaC,QAAQ,cAI/CiE,EAAaD,EAAQE,GACrBjE,EAAOC,KAAKC,UAAU,CAAE8D,eAE9B,IACI,MAAM7D,QAAYC,EAAAA,EAAMC,KAAK,0CAAsDL,EAAMJ,GAEtE,MAAfO,EAAI+D,OACJ5D,EAAS,CACLC,KAAM4D,EAAAA,GACN1D,QAASN,EAAIO,OAGjBJ,EAAS,CACLC,KAAM6D,EAAAA,IAGlB,CAAE,MAAMC,GACJ/D,EAAS,CACLC,KAAM6D,EAAAA,IAEd,CAEJ,KAAO,CACH,IAAIE,EAAO,GAEPxE,aAAaC,QAAQ,UACrBuE,EAAOrE,KAAKsE,MAAMzE,aAAaC,QAAQ,UAG3C,IAAIyE,GAAgB,EAEpBF,EAAKG,KAAIC,IACDX,EAAQE,GAAGU,aAAeD,EAAKX,QAAQE,GAAGU,aAC1CH,GAAgB,EACpB,IAGJ,MAAMI,EAAa,CACfb,QAASA,EACTc,MAAO,GAGPL,GACAF,EAAKQ,KAAKF,GAGdtE,EAAS,CACLC,KAAMwE,EAAAA,GACNtE,QAAS6D,GAEjB,GAISjB,EAAYA,IAAM1D,UAC3B,GAAIG,aAAaC,QAAQ,UAAW,CAChC,MAAMH,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,cAAiB,OAAOC,aAAaC,QAAQ,cAIrD,IACI,MAAMI,QAAYC,EAAAA,EAAMc,IAAI,4CAAwDtB,GAEjE,MAAfO,EAAI+D,OACJ5D,EAAS,CACLC,KAAMyE,EAAAA,GACNvE,QAASN,EAAIO,OAGjBJ,EAAS,CACLC,KAAM0E,EAAAA,IAGlB,CAAE,MAAMZ,GACJ/D,EAAS,CACLC,KAAM0E,EAAAA,IAEd,CACJ,MACI3E,EAAS,CACLC,KAAM2E,EAAAA,GAEd,EAGS5B,EAAYA,IAAM3D,UAC3B,GAAIG,aAAaC,QAAQ,UAAW,CAChC,MAAMH,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,cAAiB,OAAOC,aAAaC,QAAQ,cAIrD,IACI,MAAMI,QAAYC,EAAAA,EAAMc,IAAI,2CAAuDtB,GAEhE,MAAfO,EAAI+D,OACJ5D,EAAS,CACLC,KAAM4E,EAAAA,GACN1E,QAASN,EAAIO,OAGjBJ,EAAS,CACLC,KAAM6E,EAAAA,IAGlB,CAAE,MAAMf,GACJ/D,EAAS,CACLC,KAAM6E,EAAAA,IAEd,CACJ,KAAO,CACH,IAAIC,EAAQ,EACRC,EAAgB,EAChBhB,EAAO,GAEPxE,aAAaC,QAAQ,UACrBuE,EAAOrE,KAAKsE,MAAMzE,aAAaC,QAAQ,SAEvCuE,EAAKG,KAAIC,IACLW,GAASE,WAAWb,EAAKX,QAAQyB,OAASD,WAAWb,EAAKG,OAC1DS,GAAiBC,WAAWb,EAAKX,QAAQ0B,eAAiBF,WAAWb,EAAKG,MAAM,KAIxFvE,EAAS,CACLC,KAAMmF,EAAAA,GACNjF,QAAS,CAAC8E,WAAWF,EAAMM,QAAQ,IAAKJ,WAAWD,EAAcK,QAAQ,MAEjF,GAISpC,EAAiBA,IAAM5D,UAChC,GAAIG,aAAaC,QAAQ,UAAW,CAChC,MAAMH,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,cAAiB,OAAOC,aAAaC,QAAQ,cAIrD,IACI,MAAMI,QAAYC,EAAAA,EAAMc,IAAI,gDAA4DtB,GAErE,MAAfO,EAAI+D,OACJ5D,EAAS,CACLC,KAAMqF,EAAAA,GACNnF,QAASN,EAAIO,OAGjBJ,EAAS,CACLC,KAAMsF,EAAAA,IAGlB,CAAE,MAAMxB,GACJ/D,EAAS,CACLC,KAAMsF,EAAAA,IAEd,CACJ,KAAO,CACH,IAAIR,EAAQ,EAERvF,aAAaC,QAAQ,UACrBsF,EAAQpF,KAAKsE,MAAMzE,aAAaC,QAAQ,SAAS+F,QAGrDxF,EAAS,CACLC,KAAMwF,EAAAA,GACNtF,QAAS4E,GAEjB,GAGSW,EAAcA,CAACtB,EAAMG,IAAUlF,UACxC,GAAIG,aAAaC,QAAQ,UAAW,CAChC,MAAMH,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,cAAiB,OAAOC,aAAaC,QAAQ,cAI/CiE,EAAaU,EAAKX,QAAQE,GAC1BjE,EAAOC,KAAKC,UAAU,CAAE8D,aAAYa,UAE1C,IACI,MAAM1E,QAAYC,EAAAA,EAAM6F,IAAI,6CAAyDjG,EAAMJ,GAExE,MAAfO,EAAI+D,QAAmB/D,EAAIO,KAAKE,MAMhCN,EAAS,CACLC,KAAM2F,EAAAA,KANV5F,EAAS,CACLC,KAAM4F,EAAAA,GACN1F,QAASN,EAAIO,MAOzB,CAAE,MAAM2D,GACJ/D,EAAS,CACLC,KAAM2F,EAAAA,IAEd,CAEJ,KAAO,CACH,IAAI5B,EAAO,GAEPxE,aAAaC,QAAQ,UACrBuE,EAAOrE,KAAKsE,MAAMzE,aAAaC,QAAQ,SAEvCuE,EAAKG,KAAI,CAAC2B,EAAWC,KACbD,EAAUrC,QAAQE,GAAGU,aAAeD,EAAKX,QAAQE,GAAGU,aACpDL,EAAK+B,GAAOxB,MAAQyB,SAASzB,GACjC,KAIRvE,EAAS,CACLC,KAAMgG,EAAAA,GACN9F,QAAS6D,GAEjB,GAISkC,EAAc9B,GAAQ/E,UAC/B,GAAIG,aAAaC,QAAQ,UAAW,CAChC,MAAMiE,EAAaU,EAAKX,QAAQE,GAC1BjE,EAAOC,KAAKC,UAAU,CAAE8D,eAGxBpE,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,cAAiB,OAAOC,aAAaC,QAAQ,aAEjDW,KAAMV,GAGV,IACI,MAAMG,QAAYC,EAAAA,EAAMqG,OAAO,6CAAyD7G,GAErE,MAAfO,EAAI+D,OACJ5D,EAAS,CACLC,KAAMmG,EAAAA,GACNjG,QAASN,EAAIO,OAGjBJ,EAAS,CACLC,KAAMoG,EAAAA,IAGlB,CAAE,MAAMtC,GACJ/D,EAAS,CACLC,KAAMoG,EAAAA,IAEd,CACJ,KAAO,CACH,IAAIrC,EAAO,GACPsC,EAAW,GAEX9G,aAAaC,QAAQ,UACrBuE,EAAOrE,KAAKsE,MAAMzE,aAAaC,QAAQ,SAEvCuE,EAAKG,KAAI2B,IACDA,EAAUrC,QAAQE,GAAGU,aAAeD,EAAKX,QAAQE,GAAGU,YACpDiC,EAAS9B,KAAKsB,EAClB,KAIR9F,EAAS,CACLC,KAAMsG,EAAAA,GACNpG,QAASmG,GAEjB,E,4ECvTG,MAAMpD,EAAmBA,IAAM7D,UAClC,GAAIG,aAAaC,QAAQ,UAAW,CAChC,MAAMH,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,cAAiB,OAAOC,aAAaC,QAAQ,cAIrD,IACI,MAAMI,QAAYC,EAAAA,EAAMc,IAAI,yCAAqDtB,GAE9D,MAAfO,EAAI+D,OACJ5D,EAAS,CACLC,KAAMuG,EAAAA,GACNrG,QAASN,EAAIO,OAGjBJ,EAAS,CACLC,KAAMwG,EAAAA,IAGlB,CAAE,MAAM1C,GACJ/D,EAAS,CACLC,KAAMwG,EAAAA,IAEd,CACJ,GAISC,EAAsBA,CAC/BC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,IACC5H,UACD,GAAIG,aAAaC,QAAQ,UAAW,CAChC,MAAMH,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChB,cAAiB,OAAOC,aAAaC,QAAQ,cAI/CC,EAAOC,KAAKC,UAAU,CACxB+G,iBACAC,iBACAC,OACAC,wBACAC,UACAC,QACAC,mBAGJ,IACI,MAAMpH,QAAYC,EAAAA,EAAM6F,IAAI,2CAAuDjG,EAAMJ,GAEtE,MAAfO,EAAI+D,QACJ5D,EAAS,CACLC,KAAMiH,EAAAA,GACN/G,QAASN,EAAIO,OAEjBJ,GAASmH,EAAAA,EAAAA,GAAS,+BAAgC,YAElDnH,EAAS,CACLC,KAAMmH,EAAAA,KAEVpH,GAASmH,EAAAA,EAAAA,GAAS,2BAA4B,QAEtD,CAAE,MAAMpD,GACJ/D,EAAS,CACLC,KAAMmH,EAAAA,KAEVpH,GAASmH,EAAAA,EAAAA,GAAS,2BAA4B,OAClD,CACJ,E","sources":["containers/ai/SentimentAnalysis.jsx","redux/actions/rl.js","hocs/Layout.js","redux/actions/cart.js","redux/actions/profile.js"],"sourcesContent":["import { connect } from \"react-redux\";\r\nimport FullWidthLayout from \"../../hocs/Layout\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { get_sentiment_prediction, train_sentiment_model } from \"../../redux/actions/rl\";\r\n\r\nfunction SentimentAnalysis({\r\n    sentiment_prediction,\r\n    sentiment_model_message,\r\n    get_sentiment_prediction,\r\n    train_sentiment_model,\r\n}) {\r\n    const [comment, setComment] = useState(\"\");\r\n    const [showAlert, setShowAlert] = useState(false);\r\n\r\n    console.log(\"üî• Valor actual de sentiment_prediction:\", sentiment_prediction);\r\n\r\n    const handleTrain = () => {\r\n        train_sentiment_model();\r\n    };\r\n\r\n    const handlePredict = () => {\r\n        if (comment.trim() !== \"\") {\r\n            console.log(\"‚úÖ Bot√≥n presionado, comentario enviado:\", comment);\r\n            get_sentiment_prediction(comment);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (sentiment_prediction !== null) {\r\n            console.log(\"üéâ Se activ√≥ el useEffect para mostrar alerta\");\r\n            setShowAlert(true);\r\n            const timer = setTimeout(() => {\r\n                setShowAlert(false);\r\n                console.log(\"‚åõ Alerta oculta autom√°ticamente\");\r\n            }, 3000);\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [sentiment_prediction]);\r\n\r\n    const getSentimentColor = (sentiment) => {\r\n        if (sentiment === \"positivo\") return \"bg-green-500\";\r\n        if (sentiment === \"negativo\") return \"bg-yellow-500\";\r\n        if (sentiment === \"agresivo\") return \"bg-red-600\";\r\n        return \"bg-gray-500\";\r\n    };\r\n\r\n    return (\r\n        <FullWidthLayout>\r\n            <div className=\"max-w-2xl mx-auto mt-6 p-6 bg-white rounded-lg shadow-md\">\r\n                <h2 className=\"text-2xl font-semibold mb-4\">An√°lisis de Sentimiento</h2>\r\n\r\n                <button\r\n                    onClick={handleTrain}\r\n                    className=\"mb-4 bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700\"\r\n                >\r\n                    Entrenar Modelo\r\n                </button>\r\n\r\n                {sentiment_model_message && (\r\n                    <p className=\"mb-4 text-green-700\">{sentiment_model_message}</p>\r\n                )}\r\n\r\n                <textarea\r\n                    value={comment}\r\n                    onChange={(e) => setComment(e.target.value)}\r\n                    placeholder=\"Escribe un comentario...\"\r\n                    className=\"w-full border border-gray-300 rounded-md p-3 mb-4\"\r\n                    rows={4}\r\n                />\r\n\r\n                <button\r\n                    onClick={handlePredict}\r\n                    className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\r\n                >\r\n                    Analizar Comentario\r\n                </button>\r\n\r\n                {/* Alerta din√°mica */}\r\n                {showAlert && sentiment_prediction && (\r\n                    <div\r\n                        className={`mt-4 p-4 rounded-md text-white font-semibold text-center ${getSentimentColor(\r\n                            sentiment_prediction\r\n                        )}`}\r\n                    >\r\n                        El comentario fue clasificado como: {sentiment_prediction.toUpperCase()}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </FullWidthLayout>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    sentiment_prediction: state.rl.sentiment_prediction,\r\n    sentiment_model_message: state.rl.sentiment_model_message,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    get_sentiment_prediction,\r\n    train_sentiment_model,\r\n})(SentimentAnalysis);\r\n","import {\r\n    TRAIN_SENTIMENT_MODEL_SUCCESS,\r\n    TRAIN_SENTIMENT_MODEL_FAIL,\r\n    GET_SENTIMENT_PREDICTION_SUCCESS,\r\n    GET_SENTIMENT_PREDICTION_FAIL\r\n} from './types';\r\n\r\nimport axios from 'axios';\r\n\r\n// Entrena el modelo\r\nexport const train_sentiment_model = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/ml/sentimiento/train`, {\r\n            headers: {\r\n                Accept: 'application/json',\r\n            }\r\n        });\r\n\r\n        dispatch({\r\n            type: TRAIN_SENTIMENT_MODEL_SUCCESS,\r\n            payload: res.data.message\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: TRAIN_SENTIMENT_MODEL_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n// Realiza una predicci√≥n de sentimiento\r\nexport const get_sentiment_prediction = (comment) => async dispatch => {\r\n    const token = localStorage.getItem('access');  // üëà Aseg√∫rate de tener guardado el token\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': `Bearer ${token}`  // üëà Esto es lo que faltaba\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ comment });\r\n\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_API_URL}/api/ml/sentimiento/predict`,\r\n            body,\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: GET_SENTIMENT_PREDICTION_SUCCESS,\r\n            payload: res.data.prediction\r\n        });\r\n    } catch (error) {\r\n        console.error(\"‚ùå ERROR AL PREDECIR:\", error.response?.data);\r\n        dispatch({\r\n            type: GET_SENTIMENT_PREDICTION_FAIL\r\n        });\r\n    }\r\n};\r\n","import { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { check_authenticated, load_user, refresh } from '../redux/actions/auth';\r\nimport {\r\n    get_items,\r\n    get_total,\r\n    get_item_total\r\n} from \"../redux/actions/cart\";\r\n\r\nimport {\r\n    get_user_profile\r\n} from \"../redux/actions/profile\";\r\n\r\nimport { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navbar from '../components/navigation/Navbar';\r\nimport Footer from '../components/navigation/Footer';\r\n\r\nconst Layout = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.refresh()\r\n        props.check_authenticated()\r\n        props.load_user()\r\n        props.get_items()\r\n        props.get_total()\r\n        props.get_item_total()\r\n        props.get_user_profile()\r\n    }, []);\r\n\r\n    return(\r\n        <div>\r\n            <Navbar/>\r\n            <ToastContainer autoClose={5000} />\r\n            {props.children}\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(null, {\r\n    check_authenticated,\r\n    load_user,\r\n    refresh,\r\n    get_items,\r\n    get_total,\r\n    get_item_total,\r\n    get_user_profile\r\n}) (Layout)","import axios from 'axios';\r\nimport {\r\n    ADD_ITEM,\r\n    GET_TOTAL,\r\n    GET_ITEM_TOTAL,\r\n    GET_ITEMS,\r\n    UPDATE_ITEM,\r\n    REMOVE_ITEM,\r\n    EMPTY_CART,\r\n    ADD_ITEM_SUCCESS,\r\n    ADD_ITEM_FAIL,\r\n    GET_TOTAL_SUCCESS,\r\n    GET_TOTAL_FAIL,\r\n    GET_ITEM_TOTAL_SUCCESS,\r\n    GET_ITEM_TOTAL_FAIL,\r\n    GET_ITEMS_SUCCESS,\r\n    GET_ITEMS_FAIL,\r\n    UPDATE_ITEM_SUCCESS,\r\n    UPDATE_ITEM_FAIL,\r\n    REMOVE_ITEM_SUCCESS,\r\n    REMOVE_ITEM_FAIL,\r\n    EMPTY_CART_SUCCESS,\r\n    EMPTY_CART_FAIL,\r\n    SYNCH_CART_SUCCESS,\r\n    SYNCH_CART_FAIL,\r\n} from './types';\r\n\r\n\r\nexport const add_item = product => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        const product_id = product.id;\r\n        const body = JSON.stringify({ product_id });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/cart/add-item`, body, config);\r\n\r\n            if (res.status === 201) {\r\n                dispatch({\r\n                    type: ADD_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: ADD_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err){\r\n            dispatch({\r\n                type: ADD_ITEM_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        let shouldAddItem = true;\r\n\r\n        cart.map(item => {\r\n            if (product.id.toString() === item.product.id.toString()) {\r\n                shouldAddItem = false;\r\n            }\r\n        });\r\n\r\n        const order_item = {\r\n            product: product,\r\n            count: 1\r\n        };\r\n\r\n        if (shouldAddItem) {\r\n            cart.push(order_item);\r\n        }\r\n\r\n        dispatch({\r\n            type: ADD_ITEM,\r\n            payload: cart\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const get_items = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/cart-items`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_ITEMS_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ITEMS_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_ITEMS_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: GET_ITEMS\r\n        });\r\n    }\r\n}\r\n\r\nexport const get_total = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-total`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_TOTAL_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_TOTAL_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_TOTAL_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let total = 0.0;\r\n        let compare_total = 0.0;\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map(item => {\r\n                total += parseFloat(item.product.price) * parseFloat(item.count);\r\n                compare_total += parseFloat(item.product.compare_price) * parseFloat(item.count);\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: GET_TOTAL,\r\n            payload: [parseFloat(total.toFixed(2)), parseFloat(compare_total.toFixed(2))]\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const get_item_total = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-item-total`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_ITEM_TOTAL_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ITEM_TOTAL_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_ITEM_TOTAL_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let total = 0;\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            total = JSON.parse(localStorage.getItem('cart')).length;\r\n        }\r\n\r\n        dispatch({\r\n            type: GET_ITEM_TOTAL,\r\n            payload: total\r\n        });\r\n    }\r\n}\r\n\r\nexport const update_item = (item, count) => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        const product_id = item.product.id;\r\n        const body = JSON.stringify({ product_id, count });\r\n\r\n        try {\r\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/cart/update-item`, body, config);\r\n\r\n            if (res.status === 200 && !res.data.error) {\r\n                dispatch({\r\n                    type: UPDATE_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: UPDATE_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: UPDATE_ITEM_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map((cart_item, index) => {\r\n                if (cart_item.product.id.toString() === item.product.id.toString()) {\r\n                    cart[index].count = parseInt(count);\r\n                }\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: UPDATE_ITEM,\r\n            payload: cart\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const remove_item = item => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const product_id = item.product.id;\r\n        const body = JSON.stringify({ product_id });\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            },\r\n            data: body\r\n        };\r\n\r\n        try {\r\n            const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/cart/remove-item`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: REMOVE_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: REMOVE_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: REMOVE_ITEM_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let cart = [];\r\n        let new_cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map(cart_item => {\r\n                if (cart_item.product.id.toString() !== item.product.id.toString()) {\r\n                    new_cart.push(cart_item);\r\n                }\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: REMOVE_ITEM,\r\n            payload: new_cart\r\n        });\r\n    }\r\n}\r\n\r\nexport const empty_cart = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/cart/empty-cart`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: EMPTY_CART_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: EMPTY_CART_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: EMPTY_CART_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: EMPTY_CART\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const synch_cart = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n        }\r\n    };\r\n\r\n    let cart_items = [];\r\n\r\n    if (localStorage.getItem('cart')) {\r\n        let cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n        cart.map(cart_item => {\r\n            const item = {};\r\n            item.product_id = cart_item.product.id;\r\n            item.count = cart_item.count;\r\n            cart_items.push(item);\r\n        });\r\n    }\r\n\r\n    const body = JSON.stringify({ cart_items });\r\n\r\n    try {\r\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/cart/synch`, body, config);\r\n\r\n        if (res.status === 201) {\r\n            dispatch({\r\n                type: SYNCH_CART_SUCCESS\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: SYNCH_CART_FAIL\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: SYNCH_CART_FAIL\r\n        });\r\n    }\r\n}","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    GET_USER_PROFILE_SUCCESS,\r\n    GET_USER_PROFILE_FAIL,\r\n    UPDATE_USER_PROFILE_SUCCESS,\r\n    UPDATE_USER_PROFILE_FAIL\r\n} from './types';\r\n\r\nexport const get_user_profile = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/profile/user`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_USER_PROFILE_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_USER_PROFILE_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_USER_PROFILE_FAIL\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const update_user_profile = (\r\n    address_line_1,\r\n    address_line_2,\r\n    city,\r\n    state_province_region,\r\n    zipcode,\r\n    phone,\r\n    country_region\r\n) => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({\r\n            address_line_1,\r\n            address_line_2,\r\n            city,\r\n            state_province_region,\r\n            zipcode,\r\n            phone,\r\n            country_region\r\n        });\r\n\r\n        try {\r\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/profile/update`, body, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: UPDATE_USER_PROFILE_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n                dispatch(setAlert('Profile updated successfully', 'green'));\r\n            } else {\r\n                dispatch({\r\n                    type: UPDATE_USER_PROFILE_FAIL\r\n                });\r\n                dispatch(setAlert('Failed to update profile', 'red'));\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: UPDATE_USER_PROFILE_FAIL\r\n            });\r\n            dispatch(setAlert('Failed to update profile', 'red'));\r\n        }\r\n    }\r\n}"],"names":["connect","state","sentiment_prediction","rl","sentiment_model_message","get_sentiment_prediction","comment","async","config","headers","localStorage","getItem","body","JSON","stringify","res","axios","post","dispatch","type","GET_SENTIMENT_PREDICTION_SUCCESS","payload","data","prediction","error","_error$response","console","response","GET_SENTIMENT_PREDICTION_FAIL","train_sentiment_model","get","Accept","TRAIN_SENTIMENT_MODEL_SUCCESS","message","TRAIN_SENTIMENT_MODEL_FAIL","_ref","setComment","useState","showAlert","setShowAlert","log","useEffect","timer","setTimeout","clearTimeout","_jsx","FullWidthLayout","children","_jsxs","className","onClick","handleTrain","value","onChange","e","target","placeholder","rows","handlePredict","trim","sentiment","toUpperCase","check_authenticated","load_user","refresh","get_items","get_total","get_item_total","get_user_profile","props","Navbar","ToastContainer","autoClose","Footer","add_item","product","product_id","id","status","ADD_ITEM_SUCCESS","ADD_ITEM_FAIL","err","cart","parse","shouldAddItem","map","item","toString","order_item","count","push","ADD_ITEM","GET_ITEMS_SUCCESS","GET_ITEMS_FAIL","GET_ITEMS","GET_TOTAL_SUCCESS","GET_TOTAL_FAIL","total","compare_total","parseFloat","price","compare_price","GET_TOTAL","toFixed","GET_ITEM_TOTAL_SUCCESS","GET_ITEM_TOTAL_FAIL","length","GET_ITEM_TOTAL","update_item","put","UPDATE_ITEM_FAIL","UPDATE_ITEM_SUCCESS","cart_item","index","parseInt","UPDATE_ITEM","remove_item","delete","REMOVE_ITEM_SUCCESS","REMOVE_ITEM_FAIL","new_cart","REMOVE_ITEM","GET_USER_PROFILE_SUCCESS","GET_USER_PROFILE_FAIL","update_user_profile","address_line_1","address_line_2","city","state_province_region","zipcode","phone","country_region","UPDATE_USER_PROFILE_SUCCESS","setAlert","UPDATE_USER_PROFILE_FAIL"],"sourceRoot":""}