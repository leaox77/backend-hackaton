{"version":3,"file":"static/js/406.934957c2.chunk.js","mappings":"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","sources":["components/dashboard/DashboardLink.js","containers/pages/dashboard/DashboardPaymentDetail.jsx","redux/actions/orders.js"],"sourcesContent":["import { Link } from \"react-router-dom\"\r\nimport { CalendarIcon } from '@heroicons/react/outline'\r\n  import { CreditCardIcon, UserIcon } from '@heroicons/react/solid'\r\n\r\n  function classNames(...classes) {\r\n    return classes.filter(Boolean).join(' ')\r\n  }\r\nconst DashboardLink =()=>{\r\n    return(\r\n        <>\r\n            <Link\r\n            to=\"/dashboard\"\r\n            className={classNames('text-gray-600 hover:bg-gray-50 hover:text-gray-900',\r\n                'group flex items-center px-2 py-2 text-base font-medium rounded-md'\r\n            )}\r\n            >\r\n            <CalendarIcon\r\n                className={classNames(\r\n                'mr-4 flex-shrink-0 h-6 w-6 text-gray-400 group-hover:text-gray-500',\r\n                )}\r\n                aria-hidden=\"true\"\r\n            />\r\n            Dashboard\r\n            </Link>\r\n            \r\n            <Link\r\n            to=\"/dashboard/payments\"\r\n            className={classNames('text-gray-600 hover:bg-gray-50 hover:text-gray-900',\r\n                'group flex items-center px-2 py-2 text-base font-medium rounded-md'\r\n            )}\r\n            >\r\n            <CreditCardIcon\r\n                className={classNames(\r\n                'mr-4 flex-shrink-0 h-6 w-6 text-gray-400 group-hover:text-gray-500',\r\n                )}\r\n                aria-hidden=\"true\"\r\n            />\r\n                Historial de compras\r\n            </Link>\r\n            \r\n            <Link\r\n            to=\"/dashboard/profile\"\r\n            className={classNames('text-gray-600 hover:bg-gray-50 hover:text-gray-900',\r\n                'group flex items-center px-2 py-2 text-base font-medium rounded-md'\r\n            )}\r\n            >\r\n            <UserIcon\r\n                className={classNames(\r\n                'mr-4 flex-shrink-0 h-6 w-6 text-gray-400 group-hover:text-gray-500',\r\n                )}\r\n                aria-hidden=\"true\"\r\n            />\r\n            Perfil\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashboardLink","import { connect } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { useEffect, useState } from 'react';\r\nimport { Navigate, Link } from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport { get_order_detail } from '../../../redux/actions/orders';\r\nimport { get_items, get_total, get_item_total } from \"../../../redux/actions/cart\";\r\nimport DashboardLink from '../../../components/dashboard/DashboardLink';\r\nimport {\r\n  XIcon,\r\n  MenuIcon,\r\n  CreditCardIcon,\r\n  DocumentTextIcon\r\n} from '@heroicons/react/outline';\r\n\r\n/* function classNames(...classes) {\r\n  return classes.filter(Boolean).join(' ');\r\n} */\r\n\r\nconst DashboardPaymentDetail = ({\r\n  order,\r\n  isAuthenticated,\r\n  get_order_detail\r\n}) => {\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n  const params = useParams();\r\n  const transaction_id = params.transaction_id;\r\n  \r\n  useEffect(() => {\r\n    get_order_detail(transaction_id);\r\n  }, [transaction_id, get_order_detail]);\r\n\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen bg-gradient-to-br from-indigo-50 to-blue-100\">\r\n      {/* Para móviles */}\r\n      {sidebarOpen && (\r\n        <div className=\"fixed inset-0 z-50 flex md:hidden\">\r\n          <div className=\"fixed inset-0 bg-gray-800 bg-opacity-75 backdrop-blur-sm\" onClick={() => setSidebarOpen(false)}></div>\r\n          <div className=\"relative flex flex-col w-72 max-w-xs bg-white shadow-xl rounded-r-xl overflow-hidden\">\r\n            <div className=\"p-5 bg-gradient-to-r from-midnight-blue to-purple-night\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h2 className=\"text-xl font-bold text-white\">Mi Cuenta</h2>\r\n                <button className=\"p-2 rounded-full bg-white bg-opacity-20 hover:bg-opacity-30 transition\" onClick={() => setSidebarOpen(false)}>\r\n                  <XIcon className=\"h-5 w-5 text-white\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <nav className=\"mt-5 p-4 space-y-3\">\r\n              <DashboardLink />\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Para escritorio */}\r\n      <aside className=\"hidden md:flex md:w-72 md:flex-col bg-white border-r border-gray-200 shadow-lg fixed h-full\">\r\n        <div className=\"p-5 bg-gradient-to-r from-midnight-blue to-purple-night\">\r\n          <h2 className=\"text-xl font-bold text-white\">Mi Cuenta</h2>\r\n        </div>\r\n        <div className=\"p-4\">\r\n          <Link to=\"/\" className=\"inline-flex items-center justify-center w-full px-4 py-2 text-sm font-medium text-midnight-blue bg-indigo-100 border border-transparent rounded-md hover:bg-indigo-200 transition\">\r\n            Regresar a Inicio\r\n          </Link>\r\n        </div>\r\n        <nav className=\"mt-2 p-4 space-y-2\">\r\n          <DashboardLink />\r\n        </nav>\r\n      </aside>\r\n\r\n      {/* Contenido principal */}\r\n      <main className=\"flex-1 md:ml-72\">\r\n        <div className=\"sticky top-0 z-10 bg-white shadow-md\">\r\n          <div className=\"mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <div className=\"flex justify-between h-16\">\r\n              <div className=\"flex items-center md:hidden\">\r\n                <button \r\n                  className=\"p-2 rounded-md text-gray-600 hover:text-gray-900 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\"\r\n                  onClick={() => setSidebarOpen(true)}\r\n                >\r\n                  <MenuIcon className=\"h-6 w-6\" />\r\n                </button>\r\n              </div>\r\n              <div className=\"flex items-center\">\r\n                <h1 className=\"text-2xl font-semibold text-gray-800\">Detalle de Factura</h1>\r\n              </div>\r\n              <div className=\"flex items-center\">\r\n                <DocumentTextIcon className=\"h-8 w-8 text-midnight-blue\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mx-auto sm:px-6 lg:px-8 py-8 max-w-4xl\">\r\n          {!order ? (\r\n            <div className=\"bg-white rounded-xl shadow-xl overflow-hidden\">\r\n              <div className=\"px-6 py-4 bg-gradient-to-r from-midnight-blue to-purple-night\">\r\n                <h2 className=\"text-lg font-bold text-white\">Cargando pedido...</h2>\r\n              </div>\r\n              <div className=\"p-6\">\r\n                <p className=\"text-gray-500\">Buscando información del pedido...</p>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"bg-white rounded-xl shadow-xl overflow-hidden\">\r\n              <div className=\"px-6 py-4 bg-gradient-to-r from-midnight-blue to-purple-night\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <h2 className=\"text-lg font-bold text-white\">Detalles del Pedido #{order.transaction_id ? order.transaction_id.slice(-6) : 'N/A'}</h2>\r\n                  <span className=\"px-3 py-1 text-xs font-semibold text-indigo-800 bg-indigo-100 rounded-full\">\r\n                    {order.status || 'Procesando'}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"p-6\">\r\n                <div className=\"text-sm border-b border-gray-200 pb-5 flex justify-between items-center\">\r\n                  <div className=\"flex items-center text-sm text-gray-500\">\r\n                    <DocumentTextIcon className=\"h-5 w-5 text-indigo-500 mr-2\" />\r\n                    <div>\r\n                      ID de Transacción: <span className=\"font-medium\">{order.transaction_id}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"font-medium text-gray-900\">\r\n                    {order.date_issued ? (\r\n                      <time dateTime={order.date_issued}>\r\n                        {moment(order.date_issued).format('LL')} • {moment(order.date_issued).fromNow()}\r\n                      </time>\r\n                    ) : (\r\n                      <time dateTime={new Date()}>\r\n                        {moment().format('LL')}\r\n                      </time>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mt-8\">\r\n                  <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Productos Comprados</h2>\r\n                  <div className=\"space-y-8\">\r\n                    {order.order_items && order.order_items.map((product) => (\r\n                      <div\r\n                        key={product.id}\r\n                        className=\"bg-white border border-gray-200 rounded-lg shadow-sm overflow-hidden\"\r\n                      >\r\n                        <div className=\"p-6\">\r\n                          <div className=\"grid grid-cols-1 md:grid-cols-12 gap-6\">\r\n                            <div className=\"md:col-span-7\">\r\n                              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                              <p className=\"hover:text-midnight-blue transition\">\r\n                                  Producto:\r\n                                </p>\r\n                              </h3>\r\n                              <Link to={`/product/${product?.id || product?.product_id}`} className=\"hover:text-midnight-blue transition\">\r\n                                  {product.name}\r\n                                </Link>\r\n                              <p className=\"text-gray-600 mb-4\">{product.s}</p>\r\n                              \r\n                              <div className=\"flex items-center text-sm text-gray-500 mb-4\">\r\n                                <DocumentTextIcon className=\"h-5 w-5 text-indigo-500 mr-2\" />\r\n                                <div>\r\n                                  ID de Transacción: <span className=\"font-medium\">{order.transaction_id}</span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"md:col-span-5 bg-indigo-50 p-4 rounded-lg\">\r\n                              \r\n                              <div>\r\n                                <div className=\"flex items-center mb-2\">\r\n                                  <CreditCardIcon className=\"h-5 w-5 text-indigo-500 mr-2\" />\r\n                                  <h4 className=\"font-medium text-gray-900\">Detalles del Producto</h4>\r\n                                </div>\r\n                                <div className=\"ml-7 text-gray-600 space-y-1\">\r\n                                  <p className=\"text-sm flex justify-between\">\r\n                                    <span>Precio total del producto:</span>\r\n                                    <span className=\"font-medium\">\r\n                                        {product.price}\r\n                                    </span>\r\n                                  </p>\r\n                                  <p className=\"text-sm flex justify-between\">\r\n                                    <span>Cantidad:</span>\r\n                                    <span className=\"font-medium\">\r\n                                      {product.count}\r\n                                    </span>\r\n                                  </p>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  order: state.Orders.order,\r\n  isAuthenticated: state.Auth.isAuthenticated,\r\n  user: state.Auth.user\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  get_items,\r\n  get_total,\r\n  get_item_total,\r\n  get_order_detail\r\n})(DashboardPaymentDetail);","import axios from 'axios';\r\nimport {\r\n    GET_ORDERS_SUCCESS,\r\n    GET_ORDERS_FAIL,\r\n    GET_ORDER_DETAIL_SUCCESS,\r\n    GET_ORDER_DETAIL_FAIL,\r\n    GET_ITEMS_SUCCESS,\r\n    GET_ITEMS_FAIL,\r\n    GET_TOTAL_SUCCESS,\r\n    GET_TOTAL_FAIL,\r\n    GET_ITEM_TOTAL_SUCCESS,\r\n    GET_ITEM_TOTAL_FAIL\r\n} from './types';\r\n\r\n\r\n// Acción para listar órdenes del usuario\r\nexport const list_orders = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/orders/get-orders`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_ORDERS_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({ type: GET_ORDERS_FAIL });\r\n            }\r\n        } catch(err) {\r\n            dispatch({ type: GET_ORDERS_FAIL });\r\n        }\r\n    }\r\n};\r\n\r\n\r\n// obtener el detalle de una orden específica\r\nexport const get_order_detail = transactionId => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/orders/get-order/${transactionId}`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_ORDER_DETAIL_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({ type: GET_ORDER_DETAIL_FAIL });\r\n            }\r\n        } catch(err) {\r\n            dispatch({ type: GET_ORDER_DETAIL_FAIL });\r\n        }\r\n    }\r\n};\r\n\r\n\r\n// obtener los ítems del carrito\r\nexport const get_items = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-items`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_ITEMS_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({ type: GET_ITEMS_FAIL });\r\n            }\r\n        } catch(err) {\r\n            dispatch({ type: GET_ITEMS_FAIL });\r\n        }\r\n    }\r\n};\r\n\r\n\r\n// obtener el total del carrito\r\nexport const get_total = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-total`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_TOTAL_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({ type: GET_TOTAL_FAIL });\r\n            }\r\n        } catch(err) {\r\n            dispatch({ type: GET_TOTAL_FAIL });\r\n        }\r\n    }\r\n};\r\n\r\n\r\n// obtener el total de ítems en el carrito\r\nexport const get_item_total = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-item-total`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_ITEM_TOTAL_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({ type: GET_ITEM_TOTAL_FAIL });\r\n            }\r\n        } catch(err) {\r\n            dispatch({ type: GET_ITEM_TOTAL_FAIL });\r\n        }\r\n    }\r\n};\r\n\r\n"],"names":["classNames","_len","arguments","length","classes","Array","_key","filter","Boolean","join","DashboardLink","_jsxs","_Fragment","children","Link","to","className","_jsx","CalendarIcon","CreditCardIcon","UserIcon","connect","state","order","Orders","isAuthenticated","Auth","user","get_items","get_total","get_item_total","get_order_detail","_ref","sidebarOpen","setSidebarOpen","useState","transaction_id","useParams","useEffect","onClick","XIcon","MenuIcon","DocumentTextIcon","slice","status","date_issued","dateTime","moment","format","fromNow","Date","order_items","map","product","id","product_id","name","s","price","count","Navigate","list_orders","async","localStorage","getItem","config","headers","res","axios","get","dispatch","type","GET_ORDERS_SUCCESS","payload","data","GET_ORDERS_FAIL","err","transactionId","GET_ORDER_DETAIL_SUCCESS","GET_ORDER_DETAIL_FAIL","GET_ITEMS_SUCCESS","GET_ITEMS_FAIL","GET_TOTAL_SUCCESS","GET_TOTAL_FAIL","GET_ITEM_TOTAL_SUCCESS","GET_ITEM_TOTAL_FAIL"],"sourceRoot":""}