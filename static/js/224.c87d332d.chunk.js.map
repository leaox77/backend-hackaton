{"version":3,"file":"static/js/224.c87d332d.chunk.js","mappings":"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","sources":["containers/auth/Signup.js","hocs/Layout.js","redux/actions/cart.js","redux/actions/profile.js"],"sourcesContent":["import Layout from '../../hocs/Layout'\r\nimport { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signup } from '../../redux/actions/auth'\r\n\r\nconst Signup = ({ signup }) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  const [accountCreated, setAccountCreated] = useState(false)\r\n  const [formData, setFormData] = useState({\r\n    first_name: '',\r\n    last_name: '',\r\n    email: '',\r\n    password: '',\r\n    re_password: ''\r\n  })\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const { first_name, last_name, email, password, re_password } = formData\r\n\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {}\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n    const passwordRegex = /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{8,}$/\r\n\r\n    if (!first_name.trim()) newErrors.first_name = 'El nombre es obligatorio'\r\n    if (!last_name.trim()) newErrors.last_name = 'El apellido es obligatorio'\r\n    if (!emailRegex.test(email)) newErrors.email = 'Correo no válido'\r\n    if (!passwordRegex.test(password))\r\n      newErrors.password = 'La contraseña debe tener al menos 8 caracteres, una mayúscula, un número y un símbolo'\r\n    if (password !== re_password) newErrors.re_password = 'Las contraseñas deben coincidir'\r\n\r\n    setErrors(newErrors)\r\n    return Object.keys(newErrors).length === 0\r\n  }\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    if (validateForm()) {\r\n      signup(first_name, last_name, email, password, re_password)\r\n      setAccountCreated(true)\r\n      window.scrollTo(0, 0)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"min-h-full flex justify-center items-center py-8 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex bg-white shadow-md border border-gray-200 rounded-lg w-[80%] sm:w-[60%] md:w-[50%] lg:w-[40%]\">\r\n          <div className=\"w-[23%] bg-gradient-to-r from-crimson-red via-deep-rose via-dark-burgundy via-royal-purple to-midnight-blue rounded-l-lg rounded-tr-[18px] rounded-br-[18px] hidden sm:block\"></div>\r\n\r\n          <div className=\"px-6 py-8 flex-1\">\r\n            <h2 className=\"text-2xl font-bold text-center text-gray-900\">Crear cuenta</h2>\r\n            <form onSubmit={onSubmit} className=\"space-y-5 mt-5\">\r\n              <InputField\r\n                label=\"Nombre\"\r\n                name=\"first_name\"\r\n                value={first_name}\r\n                onChange={onChange}\r\n                error={errors.first_name}\r\n              />\r\n              <InputField\r\n                label=\"Apellido\"\r\n                name=\"last_name\"\r\n                value={last_name}\r\n                onChange={onChange}\r\n                error={errors.last_name}\r\n              />\r\n              <InputField\r\n                label=\"Correo\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={onChange}\r\n                error={errors.email}\r\n              />\r\n              <InputField\r\n                label=\"Contraseña\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={onChange}\r\n                error={errors.password}\r\n              />\r\n              <InputField\r\n                label=\"Confirmar contraseña\"\r\n                name=\"re_password\"\r\n                type=\"password\"\r\n                value={re_password}\r\n                onChange={onChange}\r\n                error={errors.re_password}\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                className=\"w-full bg-midnight-blue hover:bg-purple-night text-white py-2 px-4 rounded-md shadow-md focus:outline-none\"\r\n              >\r\n                Registrarse\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst InputField = ({ label, name, type = 'text', value, onChange, error }) => (\r\n  <div>\r\n    <label htmlFor={name} className=\"block text-sm font-medium text-gray-700\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      id={name}\r\n      name={name}\r\n      type={type}\r\n      value={value}\r\n      onChange={onChange}\r\n      className={`mt-1 block w-full px-3 py-2 border ${\r\n        error ? 'border-red-500' : 'border-gray-300'\r\n      } rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm`}\r\n    />\r\n    {error && <p className=\"mt-1 text-sm text-red-500\">{error}</p>}\r\n  </div>\r\n)\r\n\r\nconst mapStateToProps = state => ({})\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup)\r\n","import { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { check_authenticated, load_user, refresh } from '../redux/actions/auth';\r\nimport {\r\n    get_items,\r\n    get_total,\r\n    get_item_total\r\n} from \"../redux/actions/cart\";\r\n\r\nimport {\r\n    get_user_profile\r\n} from \"../redux/actions/profile\";\r\n\r\nimport { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navbar from '../components/navigation/Navbar';\r\nimport Footer from '../components/navigation/Footer';\r\n\r\nconst Layout = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.refresh()\r\n        props.check_authenticated()\r\n        props.load_user()\r\n        props.get_items()\r\n        props.get_total()\r\n        props.get_item_total()\r\n        props.get_user_profile()\r\n    }, []);\r\n\r\n    return(\r\n        <div>\r\n            <Navbar/>\r\n            <ToastContainer autoClose={5000} />\r\n            {props.children}\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(null, {\r\n    check_authenticated,\r\n    load_user,\r\n    refresh,\r\n    get_items,\r\n    get_total,\r\n    get_item_total,\r\n    get_user_profile\r\n}) (Layout)","import axios from 'axios';\r\nimport {\r\n    ADD_ITEM,\r\n    GET_TOTAL,\r\n    GET_ITEM_TOTAL,\r\n    GET_ITEMS,\r\n    UPDATE_ITEM,\r\n    REMOVE_ITEM,\r\n    EMPTY_CART,\r\n    ADD_ITEM_SUCCESS,\r\n    ADD_ITEM_FAIL,\r\n    GET_TOTAL_SUCCESS,\r\n    GET_TOTAL_FAIL,\r\n    GET_ITEM_TOTAL_SUCCESS,\r\n    GET_ITEM_TOTAL_FAIL,\r\n    GET_ITEMS_SUCCESS,\r\n    GET_ITEMS_FAIL,\r\n    UPDATE_ITEM_SUCCESS,\r\n    UPDATE_ITEM_FAIL,\r\n    REMOVE_ITEM_SUCCESS,\r\n    REMOVE_ITEM_FAIL,\r\n    EMPTY_CART_SUCCESS,\r\n    EMPTY_CART_FAIL,\r\n    SYNCH_CART_SUCCESS,\r\n    SYNCH_CART_FAIL,\r\n} from './types';\r\n\r\n\r\nexport const add_item = product => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        const product_id = product.id;\r\n        const body = JSON.stringify({ product_id });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/cart/add-item`, body, config);\r\n\r\n            if (res.status === 201) {\r\n                dispatch({\r\n                    type: ADD_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: ADD_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err){\r\n            dispatch({\r\n                type: ADD_ITEM_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        let shouldAddItem = true;\r\n\r\n        cart.map(item => {\r\n            if (product.id.toString() === item.product.id.toString()) {\r\n                shouldAddItem = false;\r\n            }\r\n        });\r\n\r\n        const order_item = {\r\n            product: product,\r\n            count: 1\r\n        };\r\n\r\n        if (shouldAddItem) {\r\n            cart.push(order_item);\r\n        }\r\n\r\n        dispatch({\r\n            type: ADD_ITEM,\r\n            payload: cart\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const get_items = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/cart-items`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_ITEMS_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ITEMS_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_ITEMS_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: GET_ITEMS\r\n        });\r\n    }\r\n}\r\n\r\nexport const get_total = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-total`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_TOTAL_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_TOTAL_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_TOTAL_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let total = 0.0;\r\n        let compare_total = 0.0;\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map(item => {\r\n                total += parseFloat(item.product.price) * parseFloat(item.count);\r\n                compare_total += parseFloat(item.product.compare_price) * parseFloat(item.count);\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: GET_TOTAL,\r\n            payload: [parseFloat(total.toFixed(2)), parseFloat(compare_total.toFixed(2))]\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const get_item_total = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-item-total`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_ITEM_TOTAL_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ITEM_TOTAL_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_ITEM_TOTAL_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let total = 0;\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            total = JSON.parse(localStorage.getItem('cart')).length;\r\n        }\r\n\r\n        dispatch({\r\n            type: GET_ITEM_TOTAL,\r\n            payload: total\r\n        });\r\n    }\r\n}\r\n\r\nexport const update_item = (item, count) => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        const product_id = item.product.id;\r\n        const body = JSON.stringify({ product_id, count });\r\n\r\n        try {\r\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/cart/update-item`, body, config);\r\n\r\n            if (res.status === 200 && !res.data.error) {\r\n                dispatch({\r\n                    type: UPDATE_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: UPDATE_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: UPDATE_ITEM_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        let cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map((cart_item, index) => {\r\n                if (cart_item.product.id.toString() === item.product.id.toString()) {\r\n                    cart[index].count = parseInt(count);\r\n                }\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: UPDATE_ITEM,\r\n            payload: cart\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const remove_item = item => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const product_id = item.product.id;\r\n        const body = JSON.stringify({ product_id });\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            },\r\n            data: body\r\n        };\r\n\r\n        try {\r\n            const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/cart/remove-item`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: REMOVE_ITEM_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: REMOVE_ITEM_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: REMOVE_ITEM_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        let cart = [];\r\n        let new_cart = [];\r\n\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n            cart.map(cart_item => {\r\n                if (cart_item.product.id.toString() !== item.product.id.toString()) {\r\n                    new_cart.push(cart_item);\r\n                }\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: REMOVE_ITEM,\r\n            payload: new_cart\r\n        });\r\n    }\r\n}\r\n\r\nexport const empty_cart = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/cart/empty-cart`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: EMPTY_CART_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: EMPTY_CART_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: EMPTY_CART_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: EMPTY_CART\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const synch_cart = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n        }\r\n    };\r\n\r\n    let cart_items = [];\r\n\r\n    if (localStorage.getItem('cart')) {\r\n        let cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n        cart.map(cart_item => {\r\n            const item = {};\r\n            item.product_id = cart_item.product.id;\r\n            item.count = cart_item.count;\r\n            cart_items.push(item);\r\n        });\r\n    }\r\n\r\n    const body = JSON.stringify({ cart_items });\r\n\r\n    try {\r\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/cart/synch`, body, config);\r\n\r\n        if (res.status === 201) {\r\n            dispatch({\r\n                type: SYNCH_CART_SUCCESS\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: SYNCH_CART_FAIL\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: SYNCH_CART_FAIL\r\n        });\r\n    }\r\n}","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    GET_USER_PROFILE_SUCCESS,\r\n    GET_USER_PROFILE_FAIL,\r\n    UPDATE_USER_PROFILE_SUCCESS,\r\n    UPDATE_USER_PROFILE_FAIL\r\n} from './types';\r\n\r\nexport const get_user_profile = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/profile/user`, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: GET_USER_PROFILE_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: GET_USER_PROFILE_FAIL\r\n                });\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: GET_USER_PROFILE_FAIL\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const update_user_profile = (\r\n    address_line_1,\r\n    address_line_2,\r\n    city,\r\n    state_province_region,\r\n    zipcode,\r\n    phone,\r\n    country_region\r\n) => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({\r\n            address_line_1,\r\n            address_line_2,\r\n            city,\r\n            state_province_region,\r\n            zipcode,\r\n            phone,\r\n            country_region\r\n        });\r\n\r\n        try {\r\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/profile/update`, body, config);\r\n\r\n            if (res.status === 200) {\r\n                dispatch({\r\n                    type: UPDATE_USER_PROFILE_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n                dispatch(setAlert('Profile updated successfully', 'green'));\r\n            } else {\r\n                dispatch({\r\n                    type: UPDATE_USER_PROFILE_FAIL\r\n                });\r\n                dispatch(setAlert('Failed to update profile', 'red'));\r\n            }\r\n        } catch(err) {\r\n            dispatch({\r\n                type: UPDATE_USER_PROFILE_FAIL\r\n            });\r\n            dispatch(setAlert('Failed to update profile', 'red'));\r\n        }\r\n    }\r\n}"],"names":["InputField","_ref2","label","name","type","value","onChange","error","_jsxs","children","_jsx","htmlFor","className","id","connect","state","signup","_ref","useEffect","window","scrollTo","accountCreated","setAccountCreated","useState","formData","setFormData","first_name","last_name","email","password","re_password","errors","setErrors","e","target","Layout","onSubmit","preventDefault","validateForm","newErrors","trim","test","Object","keys","length","check_authenticated","load_user","refresh","get_items","get_total","get_item_total","get_user_profile","props","Navbar","ToastContainer","autoClose","Footer","add_item","product","async","localStorage","getItem","config","headers","product_id","body","JSON","stringify","res","axios","post","status","dispatch","ADD_ITEM_SUCCESS","payload","data","ADD_ITEM_FAIL","err","cart","parse","shouldAddItem","map","item","toString","order_item","count","push","ADD_ITEM","get","GET_ITEMS_SUCCESS","GET_ITEMS_FAIL","GET_ITEMS","GET_TOTAL_SUCCESS","GET_TOTAL_FAIL","total","compare_total","parseFloat","price","compare_price","GET_TOTAL","toFixed","GET_ITEM_TOTAL_SUCCESS","GET_ITEM_TOTAL_FAIL","GET_ITEM_TOTAL","update_item","put","UPDATE_ITEM_FAIL","UPDATE_ITEM_SUCCESS","cart_item","index","parseInt","UPDATE_ITEM","remove_item","delete","REMOVE_ITEM_SUCCESS","REMOVE_ITEM_FAIL","new_cart","REMOVE_ITEM","GET_USER_PROFILE_SUCCESS","GET_USER_PROFILE_FAIL","update_user_profile","address_line_1","address_line_2","city","state_province_region","zipcode","phone","country_region","UPDATE_USER_PROFILE_SUCCESS","setAlert","UPDATE_USER_PROFILE_FAIL"],"sourceRoot":""}